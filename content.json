{"meta":{"title":"C0debreak's Blog","subtitle":null,"description":null,"author":"P0tato","url":"http://yoursite.com","root":"/"},"pages":[{"title":"","date":"2019-07-15T15:53:06.546Z","updated":"2019-07-15T15:53:06.495Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"title: about date: 2019-07-15 22:54:02 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"categories","date":"2020-06-09T15:39:50.000Z","updated":"2020-06-09T15:40:26.501Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"tags","date":"2020-06-09T15:39:43.000Z","updated":"2020-06-09T15:41:19.853Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"}],"posts":[{"title":"Vulnhub靶机渗透——Wakanda","slug":"Vulnhub靶机渗透——Wakanda","date":"2020-06-16T16:26:44.916Z","updated":"2020-06-16T17:22:57.220Z","comments":true,"path":"2020/06/17/Vulnhub靶机渗透——Wakanda/","link":"","permalink":"http://yoursite.com/2020/06/17/Vulnhub靶机渗透——Wakanda/","excerpt":"0x00 前言靶机地址：https://www.vulnhub.com/entry/wakanda-1,251/# 使用VM VirtualBox运行靶机，配置运行kali的VMware和运行靶机的VM VirtualBox均使用桥接网卡模式，这样kali和目的靶机就在同一个局域网中，可以开始后续的测试了。 0x01 目标探测我们先使用ipconfig命令来查看下本地ip，然后再使用netdiscover命令和arp -l命令来探测局域网内有哪些存活的主机。","text":"0x00 前言靶机地址：https://www.vulnhub.com/entry/wakanda-1,251/# 使用VM VirtualBox运行靶机，配置运行kali的VMware和运行靶机的VM VirtualBox均使用桥接网卡模式，这样kali和目的靶机就在同一个局域网中，可以开始后续的测试了。 0x01 目标探测我们先使用ipconfig命令来查看下本地ip，然后再使用netdiscover命令和arp -l命令来探测局域网内有哪些存活的主机。 12345678910root@kali:~# ifconfigeth0: flags=4163 mtu 1500 inet 192.168.199.211 netmask 255.255.255.0 broadcast 192.168.199.255 inet6 fe80::20c:29ff:fef9:c363 prefixlen 64 scopeid 0x20 ether 00:0c:29:f9:c3:63 txqueuelen 1000 (Ethernet) RX packets 570 bytes 187830 (183.4 KiB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 73307 bytes 4399916 (4.1 MiB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0...... 可以看到kali在eth0上的IP地址和掩码为192.168.199.211/24。netdiscover和arp -l结果如下： 123456789101112131415161718root@kali:~# netdiscover -i eth0Currently scanning: 172.16.28.0/16 | Screen View: Unique Hosts 18 Captured ARP Req/Rep packets, from 11 hosts. Total size: 1080 _____________________________________________________________________________ IP At MAC Address Count Len MAC Vendor / Hostname ----------------------------------------------------------------------------- 192.168.199.1 d4:ee:07:60:2d:18 5 300 HIWIFI Co., Ltd. 192.168.199.122 04:cf:8c:24:ec:b2 3 180 XIAOMI Electronics,CO., 192.168.199.248 08:1f:71:30:18:db 1 60 TP-LINK TECHNOLOGIES CO 192.168.199.105 08:00:27:3c:1e:db 2 120 PCS Systemtechnik GmbH 192.168.199.123 44:23:7c:7b:79:bf 1 60 Beijing Xiaomi Mobile S 192.168.199.151 00:02:ee:90:5c:3d 1 60 Nokia Danmark A/S 192.168.199.167 50:ec:50:39:89:bd 1 60 Beijing Xiaomi Mobile S 192.168.199.183 44:23:7c:6d:18:07 1 60 Beijing Xiaomi Mobile S 192.168.199.201 44:23:7c:84:61:e9 1 60 Beijing Xiaomi Mobile S 192.168.199.188 cc:66:0a:2f:ec:be 1 60 Apple, Inc. 192.168.199.247 a4:cf:12:c6:bd:d3 1 60 Espressif Inc. 1234567891011121314151617root@kali:~# arp-scan -lInterface: eth0, type: EN10MB, MAC: 00:0c:29:f9:c3:63, IPv4: 192.168.199.211Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)192.168.199.1 d4:ee:07:60:2d:18 HIWIFI Co., Ltd.192.168.199.105 08:00:27:3c:1e:db PCS Systemtechnik GmbH192.168.199.105 08:00:27:3c:1e:db PCS Systemtechnik GmbH (DUP: 2)192.168.199.122 04:cf:8c:24:ec:b2 XIAOMI Electronics,CO.,LTD192.168.199.123 44:23:7c:7b:79:bf Beijing Xiaomi Mobile Software Co., Ltd192.168.199.151 00:02:ee:90:5c:3d Nokia Danmark A/S192.168.199.167 50:ec:50:39:89:bd Beijing Xiaomi Mobile Software Co., Ltd192.168.199.201 44:23:7c:84:61:e9 Beijing Xiaomi Mobile Software Co., Ltd192.168.199.188 cc:66:0a:2f:ec:be Apple, Inc.192.168.199.247 a4:cf:12:c6:bd:d3 Espressif Inc.192.168.199.101 12:31:0a:85:a6:09 (Unknown: locally administered)11 packets received by filter, 0 packets dropped by kernelEnding arp-scan 1.9.7: 256 hosts scanned in 2.323 seconds (110.20 hosts/sec). 11 responded 可以看到，除了192.168.199.105 08:00:27:3c:1e:db PCS Systemtechnik GmbH这个ip之外，其他应该都是正常使用的ip，192.168.199.105应该就是我们这次靶机的ip。 0x02 端口/服务扫描先使用nmap扫描靶机开放端口，结果如下： 12345678910111213root@kali:~# nmap -sS -p- 192.168.199.105 Starting Nmap 7.80 ( https://nmap.org ) at 2020-06-16 12:40 EDT Nmap scan report for 192.168.199.105 Host is up (0.00036s latency). Not shown: 65531 closed ports PORT STATE SERVICE 80/tcp open http 111/tcp open rpcbind 3333/tcp open dec-notes 34509/tcp open unknown MAC Address: 08:00:27:3C:1E:DB (Oracle VirtualBox virtual NIC) Nmap done: 1 IP address (1 host up) scanned in 2.83 seconds 可以看到比较明显的是开放了80的web端口，另外还有3333和34509端口比较可疑。网页打开看了一下，是一个振金市场的主页。 使用nikto扫描下网站，看网站是否存在漏洞或者信息泄露： 1234567891011121314151617181920root@kali:~# nikto -h http://192.168.199.105- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP: 192.168.199.105+ Target Hostname: 192.168.199.105+ Target Port: 80+ Start Time: 2020-06-16 12:51:18 (GMT-4)---------------------------------------------------------------------------+ Server: Apache/2.4.10 (Debian)+ The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ No CGI Directories found (use '-C all' to force check all possible dirs)+ Apache/2.4.10 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.+ OSVDB-3233: /icons/README: Apache default file found.+ 7915 requests: 0 error(s) and 6 item(s) reported on remote host+ End Time: 2020-06-16 12:52:17 (GMT-4) (59 seconds)---------------------------------------------------------------------------+ 1 host(s) tested 但是没发现什么有用的信息，于是接着用dirb来暴力枚举下网站目录： 1234567891011121314151617181920root@kali:~# dirb http://192.168.199.105 ----------------- DIRB v2.22 By The Dark Raver ----------------- START_TIME: Tue Jun 16 12:49:43 2020 URL_BASE: http://192.168.199.105/ WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt-----------------GENERATED WORDS: 4612 ---- Scanning URL: http://192.168.199.105/ ----+ http://192.168.199.105/admin (CODE:200|SIZE:0) + http://192.168.199.105/backup (CODE:200|SIZE:0) + http://192.168.199.105/index.php (CODE:200|SIZE:1527) + http://192.168.199.105/secret (CODE:200|SIZE:0) + http://192.168.199.105/server-status (CODE:403|SIZE:303) + http://192.168.199.105/shell (CODE:200|SIZE:0) -----------------END_TIME: Tue Jun 16 12:49:47 2020DOWNLOADED: 4612 - FOUND: 6 未完待续… document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"Web","slug":"Web","permalink":"http://yoursite.com/categories/Web/"}],"tags":[{"name":"Vulnhub","slug":"Vulnhub","permalink":"http://yoursite.com/tags/Vulnhub/"}]},{"title":"文件包含漏洞分析","slug":"LFI","date":"2019-07-17T12:36:57.641Z","updated":"2020-06-16T17:01:27.138Z","comments":true,"path":"2019/07/17/LFI/","link":"","permalink":"http://yoursite.com/2019/07/17/LFI/","excerpt":"0x00 漏洞简介如果允许客户端输入控制动态包含在服务器端的文件，会导致恶意代码的执行与敏感信息的泄露。文件包含通常分为本地文件包含（Local File Inclusion）和远程文件包含(Remote File Inclusion)。allow_url_fopen和allow_url_include为on的情况认为是远程文件包含漏洞，allow_url_fopen为off和allow_url_include为on为本地文件包含漏洞。","text":"0x00 漏洞简介如果允许客户端输入控制动态包含在服务器端的文件，会导致恶意代码的执行与敏感信息的泄露。文件包含通常分为本地文件包含（Local File Inclusion）和远程文件包含(Remote File Inclusion)。allow_url_fopen和allow_url_include为on的情况认为是远程文件包含漏洞，allow_url_fopen为off和allow_url_include为on为本地文件包含漏洞。 0x01 漏洞成因文件包含漏洞的产生原因是通过引入文件时，由于传入的文件名没有经过合理的校验，或者校验被绕过，从而操作了预想之外的文件，就可能导致意外的文件泄露甚至恶意代码注入。当被包含的文件在服务器本地时，就形成本地文件包含漏洞。 0x02 实例分析12345if ($_GET['func']) { include $_GET['func'];} else { include 'default.php';} 程序的本意可能是当提交url为http://example.com/index.php?func=add.php时，调用add.php里面的样式内容和功能。直接访问http://example.com/index.php则会包含默认的default.php。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"Web","slug":"Web","permalink":"http://yoursite.com/categories/Web/"}],"tags":[{"name":"文件包含","slug":"文件包含","permalink":"http://yoursite.com/tags/文件包含/"}]}]}