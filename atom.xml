<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>C0debreak&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-16T17:22:57.220Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>P0tato</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vulnhub靶机渗透——Wakanda</title>
    <link href="http://yoursite.com/2020/06/17/Vulnhub%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E2%80%94%E2%80%94Wakanda/"/>
    <id>http://yoursite.com/2020/06/17/Vulnhub靶机渗透——Wakanda/</id>
    <published>2020-06-16T16:26:44.916Z</published>
    <updated>2020-06-16T17:22:57.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>靶机地址：<a href="https://www.vulnhub.com/entry/wakanda-1,251/#" target="_blank" rel="noopener">https://www.vulnhub.com/entry/wakanda-1,251/#</a></p><p>使用VM VirtualBox运行靶机，配置运行kali的VMware和运行靶机的VM VirtualBox均使用桥接网卡模式，这样kali和目的靶机就在同一个局域网中，可以开始后续的测试了。</p><h2 id="0x01-目标探测"><a href="#0x01-目标探测" class="headerlink" title="0x01 目标探测"></a>0x01 目标探测</h2><p>我们先使用<code>ipconfig</code>命令来查看下本地ip，然后再使用<code>netdiscover</code>命令和<code>arp -l</code>命令来探测局域网内有哪些存活的主机。</p><a id="more"></a><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># ifconfig</span></span><br><span class="line">eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500</span><br><span class="line">        inet 192.168.199.211  netmask 255.255.255.0  broadcast 192.168.199.255</span><br><span class="line">        inet6 fe80::20c:29ff:fef9:c363  prefixlen 64  scopeid 0x20<link></span><br><span class="line">        ether 00:0c:29:f9:c3:63  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 570  bytes 187830 (183.4 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 73307  bytes 4399916 (4.1 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line">......</span><br></pre></td></tr></tbody></table></figure><p>可以看到kali在eth0上的IP地址和掩码为<code>192.168.199.211/24</code>。<code>netdiscover</code>和<code>arp -l</code>结果如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># netdiscover -i eth0</span></span><br><span class="line">Currently scanning: 172.16.28.0/16   |   Screen View: Unique Hosts       </span><br><span class="line">                                                                          </span><br><span class="line"> 18 Captured ARP Req/Rep packets, from 11 hosts.   Total size: 1080       </span><br><span class="line"> _____________________________________________________________________________</span><br><span class="line">   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line"> -----------------------------------------------------------------------------</span><br><span class="line"> 192.168.199.1   d4:ee:07:60:2d:18      5     300  HIWIFI Co., Ltd.       </span><br><span class="line"> 192.168.199.122 04:cf:8c:24:ec:b2      3     180  XIAOMI Electronics,CO.,</span><br><span class="line"> 192.168.199.248 08:1f:71:30:18:db      1      60  TP-LINK TECHNOLOGIES CO</span><br><span class="line"> 192.168.199.105 08:00:27:3c:1e:db      2     120  PCS Systemtechnik GmbH </span><br><span class="line"> 192.168.199.123 44:23:7c:7b:79:bf      1      60  Beijing Xiaomi Mobile S</span><br><span class="line"> 192.168.199.151 00:02:ee:90:5c:3d      1      60  Nokia Danmark A/S      </span><br><span class="line"> 192.168.199.167 50:ec:50:39:89:bd      1      60  Beijing Xiaomi Mobile S</span><br><span class="line"> 192.168.199.183 44:23:7c:6d:18:07      1      60  Beijing Xiaomi Mobile S</span><br><span class="line"> 192.168.199.201 44:23:7c:84:61:e9      1      60  Beijing Xiaomi Mobile S</span><br><span class="line"> 192.168.199.188 cc:66:0a:2f:ec:be      1      60  Apple, Inc.            </span><br><span class="line"> 192.168.199.247 a4:cf:12:c6:bd:d3      1      60  Espressif Inc.</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># arp-scan -l</span></span><br><span class="line">Interface: eth0, <span class="built_in">type</span>: EN10MB, MAC: 00:0c:29:f9:c3:63, IPv4: 192.168.199.211</span><br><span class="line">Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.199.1   d4:ee:07:60:2d:18       HIWIFI Co., Ltd.</span><br><span class="line">192.168.199.105 08:00:27:3c:1e:db       PCS Systemtechnik GmbH</span><br><span class="line">192.168.199.105 08:00:27:3c:1e:db       PCS Systemtechnik GmbH (DUP: 2)</span><br><span class="line">192.168.199.122 04:cf:8c:24:ec:b2       XIAOMI Electronics,CO.,LTD</span><br><span class="line">192.168.199.123 44:23:7c:7b:79:bf       Beijing Xiaomi Mobile Software Co., Ltd</span><br><span class="line">192.168.199.151 00:02:ee:90:5c:3d       Nokia Danmark A/S</span><br><span class="line">192.168.199.167 50:ec:50:39:89:bd       Beijing Xiaomi Mobile Software Co., Ltd</span><br><span class="line">192.168.199.201 44:23:7c:84:61:e9       Beijing Xiaomi Mobile Software Co., Ltd</span><br><span class="line">192.168.199.188 cc:66:0a:2f:ec:be       Apple, Inc.</span><br><span class="line">192.168.199.247 a4:cf:12:c6:bd:d3       Espressif Inc.</span><br><span class="line">192.168.199.101 12:31:0a:85:a6:09       (Unknown: locally administered)</span><br><span class="line"></span><br><span class="line">11 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.9.7: 256 hosts scanned <span class="keyword">in</span> 2.323 seconds (110.20 hosts/sec). 11 responded</span><br></pre></td></tr></tbody></table></figure><p>可以看到，除了<code>192.168.199.105 08:00:27:3c:1e:db       PCS Systemtechnik GmbH</code>这个ip之外，其他应该都是正常使用的ip，<code>192.168.199.105</code>应该就是我们这次靶机的ip。</p><h2 id="0x02-端口-服务扫描"><a href="#0x02-端口-服务扫描" class="headerlink" title="0x02 端口/服务扫描"></a>0x02 端口/服务扫描</h2><p>先使用nmap扫描靶机开放端口，结果如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sS -p- 192.168.199.105                                           </span></span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-06-16 12:40 EDT                     </span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.199.105                                                 </span><br><span class="line">Host is up (0.00036s latency).                                                       </span><br><span class="line">Not shown: 65531 closed ports                                                       </span><br><span class="line">PORT      STATE SERVICE                                                             </span><br><span class="line">80/tcp    open  http                                                                 </span><br><span class="line">111/tcp   open  rpcbind                                                             </span><br><span class="line">3333/tcp  open  dec-notes                                                          </span><br><span class="line">34509/tcp open  unknown                                                             </span><br><span class="line">MAC Address: 08:00:27:3C:1E:DB (Oracle VirtualBox virtual NIC)                   </span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 2.83 seconds</span><br></pre></td></tr></tbody></table></figure><p>可以看到比较明显的是开放了80的web端口，另外还有3333和34509端口比较可疑。网页打开看了一下，是一个振金市场的主页。</p><p><img src="https://pic.downk.cc/item/5ee8fd62f83acb26b9ffe2b0.png" alt></p><p>使用nikto扫描下网站，看网站是否存在漏洞或者信息泄露：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nikto -h http://192.168.199.105</span></span><br><span class="line">- Nikto v2.1.6</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Target IP:          192.168.199.105</span><br><span class="line">+ Target Hostname:    192.168.199.105</span><br><span class="line">+ Target Port:        80</span><br><span class="line">+ Start Time:         2020-06-16 12:51:18 (GMT-4)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Server: Apache/2.4.10 (Debian)</span><br><span class="line">+ The anti-clickjacking X-Frame-Options header is not present.</span><br><span class="line">+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</span><br><span class="line">+ The X-Content-Type-Options header is not <span class="built_in">set</span>. This could allow the user agent to render the content of the site <span class="keyword">in</span> a different fashion to the MIME <span class="built_in">type</span></span><br><span class="line">+ No CGI Directories found (use <span class="string">'-C all'</span> to force check all possible <span class="built_in">dirs</span>)</span><br><span class="line">+ Apache/2.4.10 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL <span class="keyword">for</span> the 2.x branch.</span><br><span class="line">+ Web Server returns a valid response with junk HTTP methods, this may cause <span class="literal">false</span> positives.</span><br><span class="line">+ OSVDB-3233: /icons/README: Apache default file found.</span><br><span class="line">+ 7915 requests: 0 error(s) and 6 item(s) reported on remote host</span><br><span class="line">+ End Time:           2020-06-16 12:52:17 (GMT-4) (59 seconds)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ 1 host(s) tested</span><br></pre></td></tr></tbody></table></figure><p>但是没发现什么有用的信息，于是接着用dirb来暴力枚举下网站目录：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># dirb http://192.168.199.105                                             </span></span><br><span class="line">-----------------                                                                   </span><br><span class="line">DIRB v2.22                                                                           </span><br><span class="line">By The Dark Raver                                                                   </span><br><span class="line">-----------------                                                                   </span><br><span class="line">START_TIME: Tue Jun 16 12:49:43 2020                                                 </span><br><span class="line">URL_BASE: http://192.168.199.105/                                                   </span><br><span class="line">WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt</span><br><span class="line">-----------------</span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line">---- Scanning URL: http://192.168.199.105/ ----</span><br><span class="line">+ http://192.168.199.105/admin (CODE:200|SIZE:0)                                     </span><br><span class="line">+ http://192.168.199.105/backup (CODE:200|SIZE:0)                                   </span><br><span class="line">+ http://192.168.199.105/index.php (CODE:200|SIZE:1527)                             </span><br><span class="line">+ http://192.168.199.105/secret (CODE:200|SIZE:0)                                   </span><br><span class="line">+ http://192.168.199.105/server-status (CODE:403|SIZE:303)                           </span><br><span class="line">+ http://192.168.199.105/shell (CODE:200|SIZE:0)                                      </span><br><span class="line">-----------------</span><br><span class="line">END_TIME: Tue Jun 16 12:49:47 2020</span><br><span class="line">DOWNLOADED: 4612 - FOUND: 6</span><br></pre></td></tr></tbody></table></figure><p>未完待续…</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;靶机地址：&lt;a href=&quot;https://www.vulnhub.com/entry/wakanda-1,251/#&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.vulnhub.com/entry/wakanda-1,251/#&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用VM VirtualBox运行靶机，配置运行kali的VMware和运行靶机的VM VirtualBox均使用桥接网卡模式，这样kali和目的靶机就在同一个局域网中，可以开始后续的测试了。&lt;/p&gt;
&lt;h2 id=&quot;0x01-目标探测&quot;&gt;&lt;a href=&quot;#0x01-目标探测&quot; class=&quot;headerlink&quot; title=&quot;0x01 目标探测&quot;&gt;&lt;/a&gt;0x01 目标探测&lt;/h2&gt;&lt;p&gt;我们先使用&lt;code&gt;ipconfig&lt;/code&gt;命令来查看下本地ip，然后再使用&lt;code&gt;netdiscover&lt;/code&gt;命令和&lt;code&gt;arp -l&lt;/code&gt;命令来探测局域网内有哪些存活的主机。&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="Vulnhub" scheme="http://yoursite.com/tags/Vulnhub/"/>
    
  </entry>
  
  <entry>
    <title>文件包含漏洞分析</title>
    <link href="http://yoursite.com/2019/07/17/LFI/"/>
    <id>http://yoursite.com/2019/07/17/LFI/</id>
    <published>2019-07-17T12:36:57.641Z</published>
    <updated>2020-06-16T17:01:27.138Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-漏洞简介"><a href="#0x00-漏洞简介" class="headerlink" title="0x00 漏洞简介"></a>0x00 漏洞简介</h2><p>如果允许客户端输入控制动态包含在服务器端的文件，会导致恶意代码的执行与敏感信息的泄露。文件包含通常分为本地文件包含（<code>Local File Inclusion</code>）和远程文件包含(<code>Remote File Inclusion</code>)。<code>allow_url_fopen</code>和<code>allow_url_include</code>为on的情况认为是远程文件包含漏洞，<code>allow_url_fopen</code>为off和<code>allow_url_include</code>为on为本地文件包含漏洞。</p><a id="more"></a><h2 id="0x01-漏洞成因"><a href="#0x01-漏洞成因" class="headerlink" title="0x01 漏洞成因"></a>0x01 漏洞成因</h2><p>文件包含漏洞的产生原因是通过引入文件时，由于传入的文件名没有经过合理的校验，或者校验被绕过，从而操作了预想之外的文件，就可能导致意外的文件泄露甚至恶意代码注入。当被包含的文件在服务器本地时，就形成本地文件包含漏洞。</p><h2 id="0x02-实例分析"><a href="#0x02-实例分析" class="headerlink" title="0x02 实例分析"></a>0x02 实例分析</h2><figure class="highlight php"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'func'</span>]) {</span><br><span class="line">   <span class="keyword">include</span> $_GET[<span class="string">'func'</span>];</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">   <span class="keyword">include</span> <span class="string">'default.php'</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>程序的本意可能是当提交url为<code>http://example.com/index.php?func=add.php</code>时，调用add.php里面的样式内容和功能。直接访问<code>http://example.com/index.php</code>则会包含默认的default.php。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-漏洞简介&quot;&gt;&lt;a href=&quot;#0x00-漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;0x00 漏洞简介&quot;&gt;&lt;/a&gt;0x00 漏洞简介&lt;/h2&gt;&lt;p&gt;如果允许客户端输入控制动态包含在服务器端的文件，会导致恶意代码的执行与敏感信息的泄露。文件包含通常分为本地文件包含（&lt;code&gt;Local File Inclusion&lt;/code&gt;）和远程文件包含(&lt;code&gt;Remote File Inclusion&lt;/code&gt;)。&lt;code&gt;allow_url_fopen&lt;/code&gt;和&lt;code&gt;allow_url_include&lt;/code&gt;为on的情况认为是远程文件包含漏洞，&lt;code&gt;allow_url_fopen&lt;/code&gt;为off和&lt;code&gt;allow_url_include&lt;/code&gt;为on为本地文件包含漏洞。&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="文件包含" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
</feed>
